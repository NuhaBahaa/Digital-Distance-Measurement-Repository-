
UltraSonic_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001a6a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000013a  00800060  00001a6a  00001afe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000005  0080019a  0080019a  00001c38  2**0
                  ALLOC
  3 .stab         000016b0  00000000  00000000  00001c38  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000b0f  00000000  00000000  000032e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000160  00000000  00000000  00003df7  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001b5  00000000  00000000  00003f57  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001d90  00000000  00000000  0000410c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001016  00000000  00000000  00005e9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000f2e  00000000  00000000  00006eb2  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000180  00000000  00000000  00007de0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002b9  00000000  00000000  00007f60  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000872  00000000  00000000  00008219  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00008a8b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 b9 0a 	jmp	0x1572	; 0x1572 <__vector_9>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 7a 0a 	jmp	0x14f4	; 0x14f4 <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea e6       	ldi	r30, 0x6A	; 106
      68:	fa e1       	ldi	r31, 0x1A	; 26
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	aa 39       	cpi	r26, 0x9A	; 154
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	aa e9       	ldi	r26, 0x9A	; 154
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	af 39       	cpi	r26, 0x9F	; 159
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 49 0c 	call	0x1892	; 0x1892 <main>
      8a:	0c 94 33 0d 	jmp	0x1a66	; 0x1a66 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 b7 0c 	jmp	0x196e	; 0x196e <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a9 e7       	ldi	r26, 0x79	; 121
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 d3 0c 	jmp	0x19a6	; 0x19a6 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 c3 0c 	jmp	0x1986	; 0x1986 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 6a 05 	call	0xad4	; 0xad4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 6a 05 	call	0xad4	; 0xad4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 95 04 	call	0x92a	; 0x92a <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 df 0c 	jmp	0x19be	; 0x19be <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 c3 0c 	jmp	0x1986	; 0x1986 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 6a 05 	call	0xad4	; 0xad4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 6a 05 	call	0xad4	; 0xad4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 95 04 	call	0x92a	; 0x92a <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 df 0c 	jmp	0x19be	; 0x19be <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 b7 0c 	jmp	0x196e	; 0x196e <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 6a 05 	call	0xad4	; 0xad4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 6a 05 	call	0xad4	; 0xad4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	89 e7       	ldi	r24, 0x79	; 121
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 95 04 	call	0x92a	; 0x92a <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 d3 0c 	jmp	0x19a6	; 0x19a6 <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 c3 0c 	jmp	0x1986	; 0x1986 <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 6a 05 	call	0xad4	; 0xad4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 6a 05 	call	0xad4	; 0xad4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 df 0c 	jmp	0x19be	; 0x19be <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 c3 0c 	jmp	0x1986	; 0x1986 <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 6a 05 	call	0xad4	; 0xad4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 6a 05 	call	0xad4	; 0xad4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 df 0c 	jmp	0x19be	; 0x19be <__epilogue_restores__+0x18>

000006f2 <__fixsfsi>:
     6f2:	ac e0       	ldi	r26, 0x0C	; 12
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 c7 0c 	jmp	0x198e	; 0x198e <__prologue_saves__+0x20>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	ce 01       	movw	r24, r28
     708:	01 96       	adiw	r24, 0x01	; 1
     70a:	be 01       	movw	r22, r28
     70c:	6b 5f       	subi	r22, 0xFB	; 251
     70e:	7f 4f       	sbci	r23, 0xFF	; 255
     710:	0e 94 6a 05 	call	0xad4	; 0xad4 <__unpack_f>
     714:	8d 81       	ldd	r24, Y+5	; 0x05
     716:	82 30       	cpi	r24, 0x02	; 2
     718:	61 f1       	breq	.+88     	; 0x772 <__fixsfsi+0x80>
     71a:	82 30       	cpi	r24, 0x02	; 2
     71c:	50 f1       	brcs	.+84     	; 0x772 <__fixsfsi+0x80>
     71e:	84 30       	cpi	r24, 0x04	; 4
     720:	21 f4       	brne	.+8      	; 0x72a <__fixsfsi+0x38>
     722:	8e 81       	ldd	r24, Y+6	; 0x06
     724:	88 23       	and	r24, r24
     726:	51 f1       	breq	.+84     	; 0x77c <__fixsfsi+0x8a>
     728:	2e c0       	rjmp	.+92     	; 0x786 <__fixsfsi+0x94>
     72a:	2f 81       	ldd	r18, Y+7	; 0x07
     72c:	38 85       	ldd	r19, Y+8	; 0x08
     72e:	37 fd       	sbrc	r19, 7
     730:	20 c0       	rjmp	.+64     	; 0x772 <__fixsfsi+0x80>
     732:	6e 81       	ldd	r22, Y+6	; 0x06
     734:	2f 31       	cpi	r18, 0x1F	; 31
     736:	31 05       	cpc	r19, r1
     738:	1c f0       	brlt	.+6      	; 0x740 <__fixsfsi+0x4e>
     73a:	66 23       	and	r22, r22
     73c:	f9 f0       	breq	.+62     	; 0x77c <__fixsfsi+0x8a>
     73e:	23 c0       	rjmp	.+70     	; 0x786 <__fixsfsi+0x94>
     740:	8e e1       	ldi	r24, 0x1E	; 30
     742:	90 e0       	ldi	r25, 0x00	; 0
     744:	82 1b       	sub	r24, r18
     746:	93 0b       	sbc	r25, r19
     748:	29 85       	ldd	r18, Y+9	; 0x09
     74a:	3a 85       	ldd	r19, Y+10	; 0x0a
     74c:	4b 85       	ldd	r20, Y+11	; 0x0b
     74e:	5c 85       	ldd	r21, Y+12	; 0x0c
     750:	04 c0       	rjmp	.+8      	; 0x75a <__fixsfsi+0x68>
     752:	56 95       	lsr	r21
     754:	47 95       	ror	r20
     756:	37 95       	ror	r19
     758:	27 95       	ror	r18
     75a:	8a 95       	dec	r24
     75c:	d2 f7       	brpl	.-12     	; 0x752 <__fixsfsi+0x60>
     75e:	66 23       	and	r22, r22
     760:	b1 f0       	breq	.+44     	; 0x78e <__fixsfsi+0x9c>
     762:	50 95       	com	r21
     764:	40 95       	com	r20
     766:	30 95       	com	r19
     768:	21 95       	neg	r18
     76a:	3f 4f       	sbci	r19, 0xFF	; 255
     76c:	4f 4f       	sbci	r20, 0xFF	; 255
     76e:	5f 4f       	sbci	r21, 0xFF	; 255
     770:	0e c0       	rjmp	.+28     	; 0x78e <__fixsfsi+0x9c>
     772:	20 e0       	ldi	r18, 0x00	; 0
     774:	30 e0       	ldi	r19, 0x00	; 0
     776:	40 e0       	ldi	r20, 0x00	; 0
     778:	50 e0       	ldi	r21, 0x00	; 0
     77a:	09 c0       	rjmp	.+18     	; 0x78e <__fixsfsi+0x9c>
     77c:	2f ef       	ldi	r18, 0xFF	; 255
     77e:	3f ef       	ldi	r19, 0xFF	; 255
     780:	4f ef       	ldi	r20, 0xFF	; 255
     782:	5f e7       	ldi	r21, 0x7F	; 127
     784:	04 c0       	rjmp	.+8      	; 0x78e <__fixsfsi+0x9c>
     786:	20 e0       	ldi	r18, 0x00	; 0
     788:	30 e0       	ldi	r19, 0x00	; 0
     78a:	40 e0       	ldi	r20, 0x00	; 0
     78c:	50 e8       	ldi	r21, 0x80	; 128
     78e:	b9 01       	movw	r22, r18
     790:	ca 01       	movw	r24, r20
     792:	2c 96       	adiw	r28, 0x0c	; 12
     794:	e2 e0       	ldi	r30, 0x02	; 2
     796:	0c 94 e3 0c 	jmp	0x19c6	; 0x19c6 <__epilogue_restores__+0x20>

0000079a <__floatunsisf>:
     79a:	a8 e0       	ldi	r26, 0x08	; 8
     79c:	b0 e0       	ldi	r27, 0x00	; 0
     79e:	e3 ed       	ldi	r30, 0xD3	; 211
     7a0:	f3 e0       	ldi	r31, 0x03	; 3
     7a2:	0c 94 bf 0c 	jmp	0x197e	; 0x197e <__prologue_saves__+0x10>
     7a6:	7b 01       	movw	r14, r22
     7a8:	8c 01       	movw	r16, r24
     7aa:	61 15       	cp	r22, r1
     7ac:	71 05       	cpc	r23, r1
     7ae:	81 05       	cpc	r24, r1
     7b0:	91 05       	cpc	r25, r1
     7b2:	19 f4       	brne	.+6      	; 0x7ba <__floatunsisf+0x20>
     7b4:	82 e0       	ldi	r24, 0x02	; 2
     7b6:	89 83       	std	Y+1, r24	; 0x01
     7b8:	60 c0       	rjmp	.+192    	; 0x87a <__stack+0x1b>
     7ba:	83 e0       	ldi	r24, 0x03	; 3
     7bc:	89 83       	std	Y+1, r24	; 0x01
     7be:	8e e1       	ldi	r24, 0x1E	; 30
     7c0:	c8 2e       	mov	r12, r24
     7c2:	d1 2c       	mov	r13, r1
     7c4:	dc 82       	std	Y+4, r13	; 0x04
     7c6:	cb 82       	std	Y+3, r12	; 0x03
     7c8:	ed 82       	std	Y+5, r14	; 0x05
     7ca:	fe 82       	std	Y+6, r15	; 0x06
     7cc:	0f 83       	std	Y+7, r16	; 0x07
     7ce:	18 87       	std	Y+8, r17	; 0x08
     7d0:	c8 01       	movw	r24, r16
     7d2:	b7 01       	movw	r22, r14
     7d4:	0e 94 46 04 	call	0x88c	; 0x88c <__clzsi2>
     7d8:	fc 01       	movw	r30, r24
     7da:	31 97       	sbiw	r30, 0x01	; 1
     7dc:	f7 ff       	sbrs	r31, 7
     7de:	3b c0       	rjmp	.+118    	; 0x856 <__floatunsisf+0xbc>
     7e0:	22 27       	eor	r18, r18
     7e2:	33 27       	eor	r19, r19
     7e4:	2e 1b       	sub	r18, r30
     7e6:	3f 0b       	sbc	r19, r31
     7e8:	57 01       	movw	r10, r14
     7ea:	68 01       	movw	r12, r16
     7ec:	02 2e       	mov	r0, r18
     7ee:	04 c0       	rjmp	.+8      	; 0x7f8 <__floatunsisf+0x5e>
     7f0:	d6 94       	lsr	r13
     7f2:	c7 94       	ror	r12
     7f4:	b7 94       	ror	r11
     7f6:	a7 94       	ror	r10
     7f8:	0a 94       	dec	r0
     7fa:	d2 f7       	brpl	.-12     	; 0x7f0 <__floatunsisf+0x56>
     7fc:	40 e0       	ldi	r20, 0x00	; 0
     7fe:	50 e0       	ldi	r21, 0x00	; 0
     800:	60 e0       	ldi	r22, 0x00	; 0
     802:	70 e0       	ldi	r23, 0x00	; 0
     804:	81 e0       	ldi	r24, 0x01	; 1
     806:	90 e0       	ldi	r25, 0x00	; 0
     808:	a0 e0       	ldi	r26, 0x00	; 0
     80a:	b0 e0       	ldi	r27, 0x00	; 0
     80c:	04 c0       	rjmp	.+8      	; 0x816 <__floatunsisf+0x7c>
     80e:	88 0f       	add	r24, r24
     810:	99 1f       	adc	r25, r25
     812:	aa 1f       	adc	r26, r26
     814:	bb 1f       	adc	r27, r27
     816:	2a 95       	dec	r18
     818:	d2 f7       	brpl	.-12     	; 0x80e <__floatunsisf+0x74>
     81a:	01 97       	sbiw	r24, 0x01	; 1
     81c:	a1 09       	sbc	r26, r1
     81e:	b1 09       	sbc	r27, r1
     820:	8e 21       	and	r24, r14
     822:	9f 21       	and	r25, r15
     824:	a0 23       	and	r26, r16
     826:	b1 23       	and	r27, r17
     828:	00 97       	sbiw	r24, 0x00	; 0
     82a:	a1 05       	cpc	r26, r1
     82c:	b1 05       	cpc	r27, r1
     82e:	21 f0       	breq	.+8      	; 0x838 <__floatunsisf+0x9e>
     830:	41 e0       	ldi	r20, 0x01	; 1
     832:	50 e0       	ldi	r21, 0x00	; 0
     834:	60 e0       	ldi	r22, 0x00	; 0
     836:	70 e0       	ldi	r23, 0x00	; 0
     838:	4a 29       	or	r20, r10
     83a:	5b 29       	or	r21, r11
     83c:	6c 29       	or	r22, r12
     83e:	7d 29       	or	r23, r13
     840:	4d 83       	std	Y+5, r20	; 0x05
     842:	5e 83       	std	Y+6, r21	; 0x06
     844:	6f 83       	std	Y+7, r22	; 0x07
     846:	78 87       	std	Y+8, r23	; 0x08
     848:	8e e1       	ldi	r24, 0x1E	; 30
     84a:	90 e0       	ldi	r25, 0x00	; 0
     84c:	8e 1b       	sub	r24, r30
     84e:	9f 0b       	sbc	r25, r31
     850:	9c 83       	std	Y+4, r25	; 0x04
     852:	8b 83       	std	Y+3, r24	; 0x03
     854:	12 c0       	rjmp	.+36     	; 0x87a <__stack+0x1b>
     856:	30 97       	sbiw	r30, 0x00	; 0
     858:	81 f0       	breq	.+32     	; 0x87a <__stack+0x1b>
     85a:	0e 2e       	mov	r0, r30
     85c:	04 c0       	rjmp	.+8      	; 0x866 <__stack+0x7>
     85e:	ee 0c       	add	r14, r14
     860:	ff 1c       	adc	r15, r15
     862:	00 1f       	adc	r16, r16
     864:	11 1f       	adc	r17, r17
     866:	0a 94       	dec	r0
     868:	d2 f7       	brpl	.-12     	; 0x85e <__floatunsisf+0xc4>
     86a:	ed 82       	std	Y+5, r14	; 0x05
     86c:	fe 82       	std	Y+6, r15	; 0x06
     86e:	0f 83       	std	Y+7, r16	; 0x07
     870:	18 87       	std	Y+8, r17	; 0x08
     872:	ce 1a       	sub	r12, r30
     874:	df 0a       	sbc	r13, r31
     876:	dc 82       	std	Y+4, r13	; 0x04
     878:	cb 82       	std	Y+3, r12	; 0x03
     87a:	1a 82       	std	Y+2, r1	; 0x02
     87c:	ce 01       	movw	r24, r28
     87e:	01 96       	adiw	r24, 0x01	; 1
     880:	0e 94 95 04 	call	0x92a	; 0x92a <__pack_f>
     884:	28 96       	adiw	r28, 0x08	; 8
     886:	ea e0       	ldi	r30, 0x0A	; 10
     888:	0c 94 db 0c 	jmp	0x19b6	; 0x19b6 <__epilogue_restores__+0x10>

0000088c <__clzsi2>:
     88c:	ef 92       	push	r14
     88e:	ff 92       	push	r15
     890:	0f 93       	push	r16
     892:	1f 93       	push	r17
     894:	7b 01       	movw	r14, r22
     896:	8c 01       	movw	r16, r24
     898:	80 e0       	ldi	r24, 0x00	; 0
     89a:	e8 16       	cp	r14, r24
     89c:	80 e0       	ldi	r24, 0x00	; 0
     89e:	f8 06       	cpc	r15, r24
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	08 07       	cpc	r16, r24
     8a4:	80 e0       	ldi	r24, 0x00	; 0
     8a6:	18 07       	cpc	r17, r24
     8a8:	88 f4       	brcc	.+34     	; 0x8cc <__clzsi2+0x40>
     8aa:	8f ef       	ldi	r24, 0xFF	; 255
     8ac:	e8 16       	cp	r14, r24
     8ae:	f1 04       	cpc	r15, r1
     8b0:	01 05       	cpc	r16, r1
     8b2:	11 05       	cpc	r17, r1
     8b4:	31 f0       	breq	.+12     	; 0x8c2 <__clzsi2+0x36>
     8b6:	28 f0       	brcs	.+10     	; 0x8c2 <__clzsi2+0x36>
     8b8:	88 e0       	ldi	r24, 0x08	; 8
     8ba:	90 e0       	ldi	r25, 0x00	; 0
     8bc:	a0 e0       	ldi	r26, 0x00	; 0
     8be:	b0 e0       	ldi	r27, 0x00	; 0
     8c0:	17 c0       	rjmp	.+46     	; 0x8f0 <__clzsi2+0x64>
     8c2:	80 e0       	ldi	r24, 0x00	; 0
     8c4:	90 e0       	ldi	r25, 0x00	; 0
     8c6:	a0 e0       	ldi	r26, 0x00	; 0
     8c8:	b0 e0       	ldi	r27, 0x00	; 0
     8ca:	12 c0       	rjmp	.+36     	; 0x8f0 <__clzsi2+0x64>
     8cc:	80 e0       	ldi	r24, 0x00	; 0
     8ce:	e8 16       	cp	r14, r24
     8d0:	80 e0       	ldi	r24, 0x00	; 0
     8d2:	f8 06       	cpc	r15, r24
     8d4:	80 e0       	ldi	r24, 0x00	; 0
     8d6:	08 07       	cpc	r16, r24
     8d8:	81 e0       	ldi	r24, 0x01	; 1
     8da:	18 07       	cpc	r17, r24
     8dc:	28 f0       	brcs	.+10     	; 0x8e8 <__clzsi2+0x5c>
     8de:	88 e1       	ldi	r24, 0x18	; 24
     8e0:	90 e0       	ldi	r25, 0x00	; 0
     8e2:	a0 e0       	ldi	r26, 0x00	; 0
     8e4:	b0 e0       	ldi	r27, 0x00	; 0
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__clzsi2+0x64>
     8e8:	80 e1       	ldi	r24, 0x10	; 16
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	a0 e0       	ldi	r26, 0x00	; 0
     8ee:	b0 e0       	ldi	r27, 0x00	; 0
     8f0:	20 e2       	ldi	r18, 0x20	; 32
     8f2:	30 e0       	ldi	r19, 0x00	; 0
     8f4:	40 e0       	ldi	r20, 0x00	; 0
     8f6:	50 e0       	ldi	r21, 0x00	; 0
     8f8:	28 1b       	sub	r18, r24
     8fa:	39 0b       	sbc	r19, r25
     8fc:	4a 0b       	sbc	r20, r26
     8fe:	5b 0b       	sbc	r21, r27
     900:	04 c0       	rjmp	.+8      	; 0x90a <__clzsi2+0x7e>
     902:	16 95       	lsr	r17
     904:	07 95       	ror	r16
     906:	f7 94       	ror	r15
     908:	e7 94       	ror	r14
     90a:	8a 95       	dec	r24
     90c:	d2 f7       	brpl	.-12     	; 0x902 <__clzsi2+0x76>
     90e:	f7 01       	movw	r30, r14
     910:	ef 57       	subi	r30, 0x7F	; 127
     912:	ff 4f       	sbci	r31, 0xFF	; 255
     914:	80 81       	ld	r24, Z
     916:	28 1b       	sub	r18, r24
     918:	31 09       	sbc	r19, r1
     91a:	41 09       	sbc	r20, r1
     91c:	51 09       	sbc	r21, r1
     91e:	c9 01       	movw	r24, r18
     920:	1f 91       	pop	r17
     922:	0f 91       	pop	r16
     924:	ff 90       	pop	r15
     926:	ef 90       	pop	r14
     928:	08 95       	ret

0000092a <__pack_f>:
     92a:	df 92       	push	r13
     92c:	ef 92       	push	r14
     92e:	ff 92       	push	r15
     930:	0f 93       	push	r16
     932:	1f 93       	push	r17
     934:	fc 01       	movw	r30, r24
     936:	e4 80       	ldd	r14, Z+4	; 0x04
     938:	f5 80       	ldd	r15, Z+5	; 0x05
     93a:	06 81       	ldd	r16, Z+6	; 0x06
     93c:	17 81       	ldd	r17, Z+7	; 0x07
     93e:	d1 80       	ldd	r13, Z+1	; 0x01
     940:	80 81       	ld	r24, Z
     942:	82 30       	cpi	r24, 0x02	; 2
     944:	48 f4       	brcc	.+18     	; 0x958 <__pack_f+0x2e>
     946:	80 e0       	ldi	r24, 0x00	; 0
     948:	90 e0       	ldi	r25, 0x00	; 0
     94a:	a0 e1       	ldi	r26, 0x10	; 16
     94c:	b0 e0       	ldi	r27, 0x00	; 0
     94e:	e8 2a       	or	r14, r24
     950:	f9 2a       	or	r15, r25
     952:	0a 2b       	or	r16, r26
     954:	1b 2b       	or	r17, r27
     956:	a5 c0       	rjmp	.+330    	; 0xaa2 <__pack_f+0x178>
     958:	84 30       	cpi	r24, 0x04	; 4
     95a:	09 f4       	brne	.+2      	; 0x95e <__pack_f+0x34>
     95c:	9f c0       	rjmp	.+318    	; 0xa9c <__pack_f+0x172>
     95e:	82 30       	cpi	r24, 0x02	; 2
     960:	21 f4       	brne	.+8      	; 0x96a <__pack_f+0x40>
     962:	ee 24       	eor	r14, r14
     964:	ff 24       	eor	r15, r15
     966:	87 01       	movw	r16, r14
     968:	05 c0       	rjmp	.+10     	; 0x974 <__pack_f+0x4a>
     96a:	e1 14       	cp	r14, r1
     96c:	f1 04       	cpc	r15, r1
     96e:	01 05       	cpc	r16, r1
     970:	11 05       	cpc	r17, r1
     972:	19 f4       	brne	.+6      	; 0x97a <__pack_f+0x50>
     974:	e0 e0       	ldi	r30, 0x00	; 0
     976:	f0 e0       	ldi	r31, 0x00	; 0
     978:	96 c0       	rjmp	.+300    	; 0xaa6 <__pack_f+0x17c>
     97a:	62 81       	ldd	r22, Z+2	; 0x02
     97c:	73 81       	ldd	r23, Z+3	; 0x03
     97e:	9f ef       	ldi	r25, 0xFF	; 255
     980:	62 38       	cpi	r22, 0x82	; 130
     982:	79 07       	cpc	r23, r25
     984:	0c f0       	brlt	.+2      	; 0x988 <__pack_f+0x5e>
     986:	5b c0       	rjmp	.+182    	; 0xa3e <__pack_f+0x114>
     988:	22 e8       	ldi	r18, 0x82	; 130
     98a:	3f ef       	ldi	r19, 0xFF	; 255
     98c:	26 1b       	sub	r18, r22
     98e:	37 0b       	sbc	r19, r23
     990:	2a 31       	cpi	r18, 0x1A	; 26
     992:	31 05       	cpc	r19, r1
     994:	2c f0       	brlt	.+10     	; 0x9a0 <__pack_f+0x76>
     996:	20 e0       	ldi	r18, 0x00	; 0
     998:	30 e0       	ldi	r19, 0x00	; 0
     99a:	40 e0       	ldi	r20, 0x00	; 0
     99c:	50 e0       	ldi	r21, 0x00	; 0
     99e:	2a c0       	rjmp	.+84     	; 0x9f4 <__pack_f+0xca>
     9a0:	b8 01       	movw	r22, r16
     9a2:	a7 01       	movw	r20, r14
     9a4:	02 2e       	mov	r0, r18
     9a6:	04 c0       	rjmp	.+8      	; 0x9b0 <__pack_f+0x86>
     9a8:	76 95       	lsr	r23
     9aa:	67 95       	ror	r22
     9ac:	57 95       	ror	r21
     9ae:	47 95       	ror	r20
     9b0:	0a 94       	dec	r0
     9b2:	d2 f7       	brpl	.-12     	; 0x9a8 <__pack_f+0x7e>
     9b4:	81 e0       	ldi	r24, 0x01	; 1
     9b6:	90 e0       	ldi	r25, 0x00	; 0
     9b8:	a0 e0       	ldi	r26, 0x00	; 0
     9ba:	b0 e0       	ldi	r27, 0x00	; 0
     9bc:	04 c0       	rjmp	.+8      	; 0x9c6 <__pack_f+0x9c>
     9be:	88 0f       	add	r24, r24
     9c0:	99 1f       	adc	r25, r25
     9c2:	aa 1f       	adc	r26, r26
     9c4:	bb 1f       	adc	r27, r27
     9c6:	2a 95       	dec	r18
     9c8:	d2 f7       	brpl	.-12     	; 0x9be <__pack_f+0x94>
     9ca:	01 97       	sbiw	r24, 0x01	; 1
     9cc:	a1 09       	sbc	r26, r1
     9ce:	b1 09       	sbc	r27, r1
     9d0:	8e 21       	and	r24, r14
     9d2:	9f 21       	and	r25, r15
     9d4:	a0 23       	and	r26, r16
     9d6:	b1 23       	and	r27, r17
     9d8:	00 97       	sbiw	r24, 0x00	; 0
     9da:	a1 05       	cpc	r26, r1
     9dc:	b1 05       	cpc	r27, r1
     9de:	21 f0       	breq	.+8      	; 0x9e8 <__pack_f+0xbe>
     9e0:	81 e0       	ldi	r24, 0x01	; 1
     9e2:	90 e0       	ldi	r25, 0x00	; 0
     9e4:	a0 e0       	ldi	r26, 0x00	; 0
     9e6:	b0 e0       	ldi	r27, 0x00	; 0
     9e8:	9a 01       	movw	r18, r20
     9ea:	ab 01       	movw	r20, r22
     9ec:	28 2b       	or	r18, r24
     9ee:	39 2b       	or	r19, r25
     9f0:	4a 2b       	or	r20, r26
     9f2:	5b 2b       	or	r21, r27
     9f4:	da 01       	movw	r26, r20
     9f6:	c9 01       	movw	r24, r18
     9f8:	8f 77       	andi	r24, 0x7F	; 127
     9fa:	90 70       	andi	r25, 0x00	; 0
     9fc:	a0 70       	andi	r26, 0x00	; 0
     9fe:	b0 70       	andi	r27, 0x00	; 0
     a00:	80 34       	cpi	r24, 0x40	; 64
     a02:	91 05       	cpc	r25, r1
     a04:	a1 05       	cpc	r26, r1
     a06:	b1 05       	cpc	r27, r1
     a08:	39 f4       	brne	.+14     	; 0xa18 <__pack_f+0xee>
     a0a:	27 ff       	sbrs	r18, 7
     a0c:	09 c0       	rjmp	.+18     	; 0xa20 <__pack_f+0xf6>
     a0e:	20 5c       	subi	r18, 0xC0	; 192
     a10:	3f 4f       	sbci	r19, 0xFF	; 255
     a12:	4f 4f       	sbci	r20, 0xFF	; 255
     a14:	5f 4f       	sbci	r21, 0xFF	; 255
     a16:	04 c0       	rjmp	.+8      	; 0xa20 <__pack_f+0xf6>
     a18:	21 5c       	subi	r18, 0xC1	; 193
     a1a:	3f 4f       	sbci	r19, 0xFF	; 255
     a1c:	4f 4f       	sbci	r20, 0xFF	; 255
     a1e:	5f 4f       	sbci	r21, 0xFF	; 255
     a20:	e0 e0       	ldi	r30, 0x00	; 0
     a22:	f0 e0       	ldi	r31, 0x00	; 0
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	a0 e0       	ldi	r26, 0x00	; 0
     a28:	3a 07       	cpc	r19, r26
     a2a:	a0 e0       	ldi	r26, 0x00	; 0
     a2c:	4a 07       	cpc	r20, r26
     a2e:	a0 e4       	ldi	r26, 0x40	; 64
     a30:	5a 07       	cpc	r21, r26
     a32:	10 f0       	brcs	.+4      	; 0xa38 <__pack_f+0x10e>
     a34:	e1 e0       	ldi	r30, 0x01	; 1
     a36:	f0 e0       	ldi	r31, 0x00	; 0
     a38:	79 01       	movw	r14, r18
     a3a:	8a 01       	movw	r16, r20
     a3c:	27 c0       	rjmp	.+78     	; 0xa8c <__pack_f+0x162>
     a3e:	60 38       	cpi	r22, 0x80	; 128
     a40:	71 05       	cpc	r23, r1
     a42:	64 f5       	brge	.+88     	; 0xa9c <__pack_f+0x172>
     a44:	fb 01       	movw	r30, r22
     a46:	e1 58       	subi	r30, 0x81	; 129
     a48:	ff 4f       	sbci	r31, 0xFF	; 255
     a4a:	d8 01       	movw	r26, r16
     a4c:	c7 01       	movw	r24, r14
     a4e:	8f 77       	andi	r24, 0x7F	; 127
     a50:	90 70       	andi	r25, 0x00	; 0
     a52:	a0 70       	andi	r26, 0x00	; 0
     a54:	b0 70       	andi	r27, 0x00	; 0
     a56:	80 34       	cpi	r24, 0x40	; 64
     a58:	91 05       	cpc	r25, r1
     a5a:	a1 05       	cpc	r26, r1
     a5c:	b1 05       	cpc	r27, r1
     a5e:	39 f4       	brne	.+14     	; 0xa6e <__pack_f+0x144>
     a60:	e7 fe       	sbrs	r14, 7
     a62:	0d c0       	rjmp	.+26     	; 0xa7e <__pack_f+0x154>
     a64:	80 e4       	ldi	r24, 0x40	; 64
     a66:	90 e0       	ldi	r25, 0x00	; 0
     a68:	a0 e0       	ldi	r26, 0x00	; 0
     a6a:	b0 e0       	ldi	r27, 0x00	; 0
     a6c:	04 c0       	rjmp	.+8      	; 0xa76 <__pack_f+0x14c>
     a6e:	8f e3       	ldi	r24, 0x3F	; 63
     a70:	90 e0       	ldi	r25, 0x00	; 0
     a72:	a0 e0       	ldi	r26, 0x00	; 0
     a74:	b0 e0       	ldi	r27, 0x00	; 0
     a76:	e8 0e       	add	r14, r24
     a78:	f9 1e       	adc	r15, r25
     a7a:	0a 1f       	adc	r16, r26
     a7c:	1b 1f       	adc	r17, r27
     a7e:	17 ff       	sbrs	r17, 7
     a80:	05 c0       	rjmp	.+10     	; 0xa8c <__pack_f+0x162>
     a82:	16 95       	lsr	r17
     a84:	07 95       	ror	r16
     a86:	f7 94       	ror	r15
     a88:	e7 94       	ror	r14
     a8a:	31 96       	adiw	r30, 0x01	; 1
     a8c:	87 e0       	ldi	r24, 0x07	; 7
     a8e:	16 95       	lsr	r17
     a90:	07 95       	ror	r16
     a92:	f7 94       	ror	r15
     a94:	e7 94       	ror	r14
     a96:	8a 95       	dec	r24
     a98:	d1 f7       	brne	.-12     	; 0xa8e <__pack_f+0x164>
     a9a:	05 c0       	rjmp	.+10     	; 0xaa6 <__pack_f+0x17c>
     a9c:	ee 24       	eor	r14, r14
     a9e:	ff 24       	eor	r15, r15
     aa0:	87 01       	movw	r16, r14
     aa2:	ef ef       	ldi	r30, 0xFF	; 255
     aa4:	f0 e0       	ldi	r31, 0x00	; 0
     aa6:	6e 2f       	mov	r22, r30
     aa8:	67 95       	ror	r22
     aaa:	66 27       	eor	r22, r22
     aac:	67 95       	ror	r22
     aae:	90 2f       	mov	r25, r16
     ab0:	9f 77       	andi	r25, 0x7F	; 127
     ab2:	d7 94       	ror	r13
     ab4:	dd 24       	eor	r13, r13
     ab6:	d7 94       	ror	r13
     ab8:	8e 2f       	mov	r24, r30
     aba:	86 95       	lsr	r24
     abc:	49 2f       	mov	r20, r25
     abe:	46 2b       	or	r20, r22
     ac0:	58 2f       	mov	r21, r24
     ac2:	5d 29       	or	r21, r13
     ac4:	b7 01       	movw	r22, r14
     ac6:	ca 01       	movw	r24, r20
     ac8:	1f 91       	pop	r17
     aca:	0f 91       	pop	r16
     acc:	ff 90       	pop	r15
     ace:	ef 90       	pop	r14
     ad0:	df 90       	pop	r13
     ad2:	08 95       	ret

00000ad4 <__unpack_f>:
     ad4:	fc 01       	movw	r30, r24
     ad6:	db 01       	movw	r26, r22
     ad8:	40 81       	ld	r20, Z
     ada:	51 81       	ldd	r21, Z+1	; 0x01
     adc:	22 81       	ldd	r18, Z+2	; 0x02
     ade:	62 2f       	mov	r22, r18
     ae0:	6f 77       	andi	r22, 0x7F	; 127
     ae2:	70 e0       	ldi	r23, 0x00	; 0
     ae4:	22 1f       	adc	r18, r18
     ae6:	22 27       	eor	r18, r18
     ae8:	22 1f       	adc	r18, r18
     aea:	93 81       	ldd	r25, Z+3	; 0x03
     aec:	89 2f       	mov	r24, r25
     aee:	88 0f       	add	r24, r24
     af0:	82 2b       	or	r24, r18
     af2:	28 2f       	mov	r18, r24
     af4:	30 e0       	ldi	r19, 0x00	; 0
     af6:	99 1f       	adc	r25, r25
     af8:	99 27       	eor	r25, r25
     afa:	99 1f       	adc	r25, r25
     afc:	11 96       	adiw	r26, 0x01	; 1
     afe:	9c 93       	st	X, r25
     b00:	11 97       	sbiw	r26, 0x01	; 1
     b02:	21 15       	cp	r18, r1
     b04:	31 05       	cpc	r19, r1
     b06:	a9 f5       	brne	.+106    	; 0xb72 <__unpack_f+0x9e>
     b08:	41 15       	cp	r20, r1
     b0a:	51 05       	cpc	r21, r1
     b0c:	61 05       	cpc	r22, r1
     b0e:	71 05       	cpc	r23, r1
     b10:	11 f4       	brne	.+4      	; 0xb16 <__unpack_f+0x42>
     b12:	82 e0       	ldi	r24, 0x02	; 2
     b14:	37 c0       	rjmp	.+110    	; 0xb84 <__unpack_f+0xb0>
     b16:	82 e8       	ldi	r24, 0x82	; 130
     b18:	9f ef       	ldi	r25, 0xFF	; 255
     b1a:	13 96       	adiw	r26, 0x03	; 3
     b1c:	9c 93       	st	X, r25
     b1e:	8e 93       	st	-X, r24
     b20:	12 97       	sbiw	r26, 0x02	; 2
     b22:	9a 01       	movw	r18, r20
     b24:	ab 01       	movw	r20, r22
     b26:	67 e0       	ldi	r22, 0x07	; 7
     b28:	22 0f       	add	r18, r18
     b2a:	33 1f       	adc	r19, r19
     b2c:	44 1f       	adc	r20, r20
     b2e:	55 1f       	adc	r21, r21
     b30:	6a 95       	dec	r22
     b32:	d1 f7       	brne	.-12     	; 0xb28 <__unpack_f+0x54>
     b34:	83 e0       	ldi	r24, 0x03	; 3
     b36:	8c 93       	st	X, r24
     b38:	0d c0       	rjmp	.+26     	; 0xb54 <__unpack_f+0x80>
     b3a:	22 0f       	add	r18, r18
     b3c:	33 1f       	adc	r19, r19
     b3e:	44 1f       	adc	r20, r20
     b40:	55 1f       	adc	r21, r21
     b42:	12 96       	adiw	r26, 0x02	; 2
     b44:	8d 91       	ld	r24, X+
     b46:	9c 91       	ld	r25, X
     b48:	13 97       	sbiw	r26, 0x03	; 3
     b4a:	01 97       	sbiw	r24, 0x01	; 1
     b4c:	13 96       	adiw	r26, 0x03	; 3
     b4e:	9c 93       	st	X, r25
     b50:	8e 93       	st	-X, r24
     b52:	12 97       	sbiw	r26, 0x02	; 2
     b54:	20 30       	cpi	r18, 0x00	; 0
     b56:	80 e0       	ldi	r24, 0x00	; 0
     b58:	38 07       	cpc	r19, r24
     b5a:	80 e0       	ldi	r24, 0x00	; 0
     b5c:	48 07       	cpc	r20, r24
     b5e:	80 e4       	ldi	r24, 0x40	; 64
     b60:	58 07       	cpc	r21, r24
     b62:	58 f3       	brcs	.-42     	; 0xb3a <__unpack_f+0x66>
     b64:	14 96       	adiw	r26, 0x04	; 4
     b66:	2d 93       	st	X+, r18
     b68:	3d 93       	st	X+, r19
     b6a:	4d 93       	st	X+, r20
     b6c:	5c 93       	st	X, r21
     b6e:	17 97       	sbiw	r26, 0x07	; 7
     b70:	08 95       	ret
     b72:	2f 3f       	cpi	r18, 0xFF	; 255
     b74:	31 05       	cpc	r19, r1
     b76:	79 f4       	brne	.+30     	; 0xb96 <__unpack_f+0xc2>
     b78:	41 15       	cp	r20, r1
     b7a:	51 05       	cpc	r21, r1
     b7c:	61 05       	cpc	r22, r1
     b7e:	71 05       	cpc	r23, r1
     b80:	19 f4       	brne	.+6      	; 0xb88 <__unpack_f+0xb4>
     b82:	84 e0       	ldi	r24, 0x04	; 4
     b84:	8c 93       	st	X, r24
     b86:	08 95       	ret
     b88:	64 ff       	sbrs	r22, 4
     b8a:	03 c0       	rjmp	.+6      	; 0xb92 <__unpack_f+0xbe>
     b8c:	81 e0       	ldi	r24, 0x01	; 1
     b8e:	8c 93       	st	X, r24
     b90:	12 c0       	rjmp	.+36     	; 0xbb6 <__unpack_f+0xe2>
     b92:	1c 92       	st	X, r1
     b94:	10 c0       	rjmp	.+32     	; 0xbb6 <__unpack_f+0xe2>
     b96:	2f 57       	subi	r18, 0x7F	; 127
     b98:	30 40       	sbci	r19, 0x00	; 0
     b9a:	13 96       	adiw	r26, 0x03	; 3
     b9c:	3c 93       	st	X, r19
     b9e:	2e 93       	st	-X, r18
     ba0:	12 97       	sbiw	r26, 0x02	; 2
     ba2:	83 e0       	ldi	r24, 0x03	; 3
     ba4:	8c 93       	st	X, r24
     ba6:	87 e0       	ldi	r24, 0x07	; 7
     ba8:	44 0f       	add	r20, r20
     baa:	55 1f       	adc	r21, r21
     bac:	66 1f       	adc	r22, r22
     bae:	77 1f       	adc	r23, r23
     bb0:	8a 95       	dec	r24
     bb2:	d1 f7       	brne	.-12     	; 0xba8 <__unpack_f+0xd4>
     bb4:	70 64       	ori	r23, 0x40	; 64
     bb6:	14 96       	adiw	r26, 0x04	; 4
     bb8:	4d 93       	st	X+, r20
     bba:	5d 93       	st	X+, r21
     bbc:	6d 93       	st	X+, r22
     bbe:	7c 93       	st	X, r23
     bc0:	17 97       	sbiw	r26, 0x07	; 7
     bc2:	08 95       	ret

00000bc4 <__fpcmp_parts_f>:
     bc4:	1f 93       	push	r17
     bc6:	dc 01       	movw	r26, r24
     bc8:	fb 01       	movw	r30, r22
     bca:	9c 91       	ld	r25, X
     bcc:	92 30       	cpi	r25, 0x02	; 2
     bce:	08 f4       	brcc	.+2      	; 0xbd2 <__fpcmp_parts_f+0xe>
     bd0:	47 c0       	rjmp	.+142    	; 0xc60 <__fpcmp_parts_f+0x9c>
     bd2:	80 81       	ld	r24, Z
     bd4:	82 30       	cpi	r24, 0x02	; 2
     bd6:	08 f4       	brcc	.+2      	; 0xbda <__fpcmp_parts_f+0x16>
     bd8:	43 c0       	rjmp	.+134    	; 0xc60 <__fpcmp_parts_f+0x9c>
     bda:	94 30       	cpi	r25, 0x04	; 4
     bdc:	51 f4       	brne	.+20     	; 0xbf2 <__fpcmp_parts_f+0x2e>
     bde:	11 96       	adiw	r26, 0x01	; 1
     be0:	1c 91       	ld	r17, X
     be2:	84 30       	cpi	r24, 0x04	; 4
     be4:	99 f5       	brne	.+102    	; 0xc4c <__fpcmp_parts_f+0x88>
     be6:	81 81       	ldd	r24, Z+1	; 0x01
     be8:	68 2f       	mov	r22, r24
     bea:	70 e0       	ldi	r23, 0x00	; 0
     bec:	61 1b       	sub	r22, r17
     bee:	71 09       	sbc	r23, r1
     bf0:	3f c0       	rjmp	.+126    	; 0xc70 <__fpcmp_parts_f+0xac>
     bf2:	84 30       	cpi	r24, 0x04	; 4
     bf4:	21 f0       	breq	.+8      	; 0xbfe <__fpcmp_parts_f+0x3a>
     bf6:	92 30       	cpi	r25, 0x02	; 2
     bf8:	31 f4       	brne	.+12     	; 0xc06 <__fpcmp_parts_f+0x42>
     bfa:	82 30       	cpi	r24, 0x02	; 2
     bfc:	b9 f1       	breq	.+110    	; 0xc6c <__fpcmp_parts_f+0xa8>
     bfe:	81 81       	ldd	r24, Z+1	; 0x01
     c00:	88 23       	and	r24, r24
     c02:	89 f1       	breq	.+98     	; 0xc66 <__fpcmp_parts_f+0xa2>
     c04:	2d c0       	rjmp	.+90     	; 0xc60 <__fpcmp_parts_f+0x9c>
     c06:	11 96       	adiw	r26, 0x01	; 1
     c08:	1c 91       	ld	r17, X
     c0a:	11 97       	sbiw	r26, 0x01	; 1
     c0c:	82 30       	cpi	r24, 0x02	; 2
     c0e:	f1 f0       	breq	.+60     	; 0xc4c <__fpcmp_parts_f+0x88>
     c10:	81 81       	ldd	r24, Z+1	; 0x01
     c12:	18 17       	cp	r17, r24
     c14:	d9 f4       	brne	.+54     	; 0xc4c <__fpcmp_parts_f+0x88>
     c16:	12 96       	adiw	r26, 0x02	; 2
     c18:	2d 91       	ld	r18, X+
     c1a:	3c 91       	ld	r19, X
     c1c:	13 97       	sbiw	r26, 0x03	; 3
     c1e:	82 81       	ldd	r24, Z+2	; 0x02
     c20:	93 81       	ldd	r25, Z+3	; 0x03
     c22:	82 17       	cp	r24, r18
     c24:	93 07       	cpc	r25, r19
     c26:	94 f0       	brlt	.+36     	; 0xc4c <__fpcmp_parts_f+0x88>
     c28:	28 17       	cp	r18, r24
     c2a:	39 07       	cpc	r19, r25
     c2c:	bc f0       	brlt	.+46     	; 0xc5c <__fpcmp_parts_f+0x98>
     c2e:	14 96       	adiw	r26, 0x04	; 4
     c30:	8d 91       	ld	r24, X+
     c32:	9d 91       	ld	r25, X+
     c34:	0d 90       	ld	r0, X+
     c36:	bc 91       	ld	r27, X
     c38:	a0 2d       	mov	r26, r0
     c3a:	24 81       	ldd	r18, Z+4	; 0x04
     c3c:	35 81       	ldd	r19, Z+5	; 0x05
     c3e:	46 81       	ldd	r20, Z+6	; 0x06
     c40:	57 81       	ldd	r21, Z+7	; 0x07
     c42:	28 17       	cp	r18, r24
     c44:	39 07       	cpc	r19, r25
     c46:	4a 07       	cpc	r20, r26
     c48:	5b 07       	cpc	r21, r27
     c4a:	18 f4       	brcc	.+6      	; 0xc52 <__fpcmp_parts_f+0x8e>
     c4c:	11 23       	and	r17, r17
     c4e:	41 f0       	breq	.+16     	; 0xc60 <__fpcmp_parts_f+0x9c>
     c50:	0a c0       	rjmp	.+20     	; 0xc66 <__fpcmp_parts_f+0xa2>
     c52:	82 17       	cp	r24, r18
     c54:	93 07       	cpc	r25, r19
     c56:	a4 07       	cpc	r26, r20
     c58:	b5 07       	cpc	r27, r21
     c5a:	40 f4       	brcc	.+16     	; 0xc6c <__fpcmp_parts_f+0xa8>
     c5c:	11 23       	and	r17, r17
     c5e:	19 f0       	breq	.+6      	; 0xc66 <__fpcmp_parts_f+0xa2>
     c60:	61 e0       	ldi	r22, 0x01	; 1
     c62:	70 e0       	ldi	r23, 0x00	; 0
     c64:	05 c0       	rjmp	.+10     	; 0xc70 <__fpcmp_parts_f+0xac>
     c66:	6f ef       	ldi	r22, 0xFF	; 255
     c68:	7f ef       	ldi	r23, 0xFF	; 255
     c6a:	02 c0       	rjmp	.+4      	; 0xc70 <__fpcmp_parts_f+0xac>
     c6c:	60 e0       	ldi	r22, 0x00	; 0
     c6e:	70 e0       	ldi	r23, 0x00	; 0
     c70:	cb 01       	movw	r24, r22
     c72:	1f 91       	pop	r17
     c74:	08 95       	ret

00000c76 <DIO_voidInit>:
/*************************Functions's Body************************/
/*****************************************************************/

/*Comment!= Initialize DIO_Registers values and direction */
extern void DIO_voidInit(void)
{
     c76:	df 93       	push	r29
     c78:	cf 93       	push	r28
     c7a:	00 d0       	rcall	.+0      	; 0xc7c <DIO_voidInit+0x6>
     c7c:	0f 92       	push	r0
     c7e:	cd b7       	in	r28, 0x3d	; 61
     c80:	de b7       	in	r29, 0x3e	; 62
	*DIO_DDRA=DIO_U8PORTADIR;
     c82:	ea e3       	ldi	r30, 0x3A	; 58
     c84:	f0 e0       	ldi	r31, 0x00	; 0
     c86:	8f ef       	ldi	r24, 0xFF	; 255
     c88:	80 83       	st	Z, r24
	*DIO_DDRB=DIO_U8PORTBDIR;
     c8a:	e7 e3       	ldi	r30, 0x37	; 55
     c8c:	f0 e0       	ldi	r31, 0x00	; 0
     c8e:	8f ef       	ldi	r24, 0xFF	; 255
     c90:	80 83       	st	Z, r24
	*DIO_DDRC=DIO_U8PORTCDIR;
     c92:	e4 e3       	ldi	r30, 0x34	; 52
     c94:	f0 e0       	ldi	r31, 0x00	; 0
     c96:	8f ee       	ldi	r24, 0xEF	; 239
     c98:	80 83       	st	Z, r24
	*DIO_DDRD=DIO_U8PORTDDIR;
     c9a:	e1 e3       	ldi	r30, 0x31	; 49
     c9c:	f0 e0       	ldi	r31, 0x00	; 0
     c9e:	8f ef       	ldi	r24, 0xFF	; 255
     ca0:	80 83       	st	Z, r24

	*DIO_PORTA= ((~(DIO_U8PORTADIR)) & *DIO_PORTA);
     ca2:	eb e3       	ldi	r30, 0x3B	; 59
     ca4:	f0 e0       	ldi	r31, 0x00	; 0
     ca6:	80 81       	ld	r24, Z
     ca8:	eb e3       	ldi	r30, 0x3B	; 59
     caa:	f0 e0       	ldi	r31, 0x00	; 0
     cac:	10 82       	st	Z, r1
	*DIO_PORTB= ((~(DIO_U8PORTBDIR)) & *DIO_PORTB);
     cae:	e8 e3       	ldi	r30, 0x38	; 56
     cb0:	f0 e0       	ldi	r31, 0x00	; 0
     cb2:	80 81       	ld	r24, Z
     cb4:	e8 e3       	ldi	r30, 0x38	; 56
     cb6:	f0 e0       	ldi	r31, 0x00	; 0
     cb8:	10 82       	st	Z, r1
	*DIO_PORTC= ((~(DIO_U8PORTCDIR)) & *DIO_PORTC);
     cba:	a5 e3       	ldi	r26, 0x35	; 53
     cbc:	b0 e0       	ldi	r27, 0x00	; 0
     cbe:	e5 e3       	ldi	r30, 0x35	; 53
     cc0:	f0 e0       	ldi	r31, 0x00	; 0
     cc2:	80 81       	ld	r24, Z
     cc4:	80 71       	andi	r24, 0x10	; 16
     cc6:	8c 93       	st	X, r24
	*DIO_PORTD= ((~(DIO_U8PORTDDIR)) & *DIO_PORTD);
     cc8:	e2 e3       	ldi	r30, 0x32	; 50
     cca:	f0 e0       	ldi	r31, 0x00	; 0
     ccc:	80 81       	ld	r24, Z
     cce:	e2 e3       	ldi	r30, 0x32	; 50
     cd0:	f0 e0       	ldi	r31, 0x00	; 0
     cd2:	10 82       	st	Z, r1


	*DIO_PORTA= *DIO_PORTA | (DIO_U8PORTAVAL & DIO_U8PORTADIR);
     cd4:	ab e3       	ldi	r26, 0x3B	; 59
     cd6:	b0 e0       	ldi	r27, 0x00	; 0
     cd8:	eb e3       	ldi	r30, 0x3B	; 59
     cda:	f0 e0       	ldi	r31, 0x00	; 0
     cdc:	80 81       	ld	r24, Z
     cde:	8c 93       	st	X, r24
	*DIO_PORTB= *DIO_PORTB | (DIO_U8PORTBVAL & DIO_U8PORTBDIR);
     ce0:	a8 e3       	ldi	r26, 0x38	; 56
     ce2:	b0 e0       	ldi	r27, 0x00	; 0
     ce4:	e8 e3       	ldi	r30, 0x38	; 56
     ce6:	f0 e0       	ldi	r31, 0x00	; 0
     ce8:	80 81       	ld	r24, Z
     cea:	8c 93       	st	X, r24
	*DIO_PORTC= *DIO_PORTC | (DIO_U8PORTCVAL & DIO_U8PORTCDIR);
     cec:	a5 e3       	ldi	r26, 0x35	; 53
     cee:	b0 e0       	ldi	r27, 0x00	; 0
     cf0:	e5 e3       	ldi	r30, 0x35	; 53
     cf2:	f0 e0       	ldi	r31, 0x00	; 0
     cf4:	80 81       	ld	r24, Z
     cf6:	8c 93       	st	X, r24
	*DIO_PORTD= *DIO_PORTD | (DIO_U8PORTDVAL & DIO_U8PORTDDIR);
     cf8:	a2 e3       	ldi	r26, 0x32	; 50
     cfa:	b0 e0       	ldi	r27, 0x00	; 0
     cfc:	e2 e3       	ldi	r30, 0x32	; 50
     cfe:	f0 e0       	ldi	r31, 0x00	; 0
     d00:	80 81       	ld	r24, Z
     d02:	8c 93       	st	X, r24
}
     d04:	0f 90       	pop	r0
     d06:	0f 90       	pop	r0
     d08:	0f 90       	pop	r0
     d0a:	cf 91       	pop	r28
     d0c:	df 91       	pop	r29
     d0e:	08 95       	ret

00000d10 <DIO_U8ReadPinVal>:

extern u8 DIO_U8ReadPinVal(u8 Copy_U8PinIdx, u8* Copy_U8PtrToVal)
{
     d10:	df 93       	push	r29
     d12:	cf 93       	push	r28
     d14:	00 d0       	rcall	.+0      	; 0xd16 <DIO_U8ReadPinVal+0x6>
     d16:	00 d0       	rcall	.+0      	; 0xd18 <DIO_U8ReadPinVal+0x8>
     d18:	0f 92       	push	r0
     d1a:	cd b7       	in	r28, 0x3d	; 61
     d1c:	de b7       	in	r29, 0x3e	; 62
     d1e:	8b 83       	std	Y+3, r24	; 0x03
     d20:	7d 83       	std	Y+5, r23	; 0x05
     d22:	6c 83       	std	Y+4, r22	; 0x04
	u8 Local_U8Flag= U8_NOERROR, Local_U8Port=0;
     d24:	81 e0       	ldi	r24, 0x01	; 1
     d26:	8a 83       	std	Y+2, r24	; 0x02
     d28:	19 82       	std	Y+1, r1	; 0x01
	if ( Copy_U8PinIdx > DIO_U8PINS_ALL )
     d2a:	8b 81       	ldd	r24, Y+3	; 0x03
     d2c:	81 32       	cpi	r24, 0x21	; 33
     d2e:	10 f0       	brcs	.+4      	; 0xd34 <DIO_U8ReadPinVal+0x24>
	{
		Local_U8Flag= U8_ERROR;
     d30:	1a 82       	std	Y+2, r1	; 0x02
     d32:	24 c0       	rjmp	.+72     	; 0xd7c <DIO_U8ReadPinVal+0x6c>
	}
	else
	{

	Local_U8Port = Copy_U8PinIdx/8;
     d34:	8b 81       	ldd	r24, Y+3	; 0x03
     d36:	86 95       	lsr	r24
     d38:	86 95       	lsr	r24
     d3a:	86 95       	lsr	r24
     d3c:	89 83       	std	Y+1, r24	; 0x01
	Copy_U8PinIdx %= 8;
     d3e:	8b 81       	ldd	r24, Y+3	; 0x03
     d40:	87 70       	andi	r24, 0x07	; 7
     d42:	8b 83       	std	Y+3, r24	; 0x03
	* Copy_U8PtrToVal = GetBit(*DIO_U8RegSel[0][Local_U8Port], Copy_U8PinIdx);
     d44:	89 81       	ldd	r24, Y+1	; 0x01
     d46:	88 2f       	mov	r24, r24
     d48:	90 e0       	ldi	r25, 0x00	; 0
     d4a:	88 0f       	add	r24, r24
     d4c:	99 1f       	adc	r25, r25
     d4e:	fc 01       	movw	r30, r24
     d50:	ef 57       	subi	r30, 0x7F	; 127
     d52:	fe 4f       	sbci	r31, 0xFE	; 254
     d54:	01 90       	ld	r0, Z+
     d56:	f0 81       	ld	r31, Z
     d58:	e0 2d       	mov	r30, r0
     d5a:	80 81       	ld	r24, Z
     d5c:	28 2f       	mov	r18, r24
     d5e:	30 e0       	ldi	r19, 0x00	; 0
     d60:	8b 81       	ldd	r24, Y+3	; 0x03
     d62:	88 2f       	mov	r24, r24
     d64:	90 e0       	ldi	r25, 0x00	; 0
     d66:	a9 01       	movw	r20, r18
     d68:	02 c0       	rjmp	.+4      	; 0xd6e <DIO_U8ReadPinVal+0x5e>
     d6a:	55 95       	asr	r21
     d6c:	47 95       	ror	r20
     d6e:	8a 95       	dec	r24
     d70:	e2 f7       	brpl	.-8      	; 0xd6a <DIO_U8ReadPinVal+0x5a>
     d72:	ca 01       	movw	r24, r20
     d74:	81 70       	andi	r24, 0x01	; 1
     d76:	ec 81       	ldd	r30, Y+4	; 0x04
     d78:	fd 81       	ldd	r31, Y+5	; 0x05
     d7a:	80 83       	st	Z, r24
	}
	return Local_U8Flag;
     d7c:	8a 81       	ldd	r24, Y+2	; 0x02
}
     d7e:	0f 90       	pop	r0
     d80:	0f 90       	pop	r0
     d82:	0f 90       	pop	r0
     d84:	0f 90       	pop	r0
     d86:	0f 90       	pop	r0
     d88:	cf 91       	pop	r28
     d8a:	df 91       	pop	r29
     d8c:	08 95       	ret

00000d8e <DIO_U8WritePinVal>:

extern u8 DIO_U8WritePinVal(u8 Copy_U8PinIdx, u8 Copy_U8PinVal)
{
     d8e:	df 93       	push	r29
     d90:	cf 93       	push	r28
     d92:	00 d0       	rcall	.+0      	; 0xd94 <DIO_U8WritePinVal+0x6>
     d94:	00 d0       	rcall	.+0      	; 0xd96 <DIO_U8WritePinVal+0x8>
     d96:	00 d0       	rcall	.+0      	; 0xd98 <DIO_U8WritePinVal+0xa>
     d98:	cd b7       	in	r28, 0x3d	; 61
     d9a:	de b7       	in	r29, 0x3e	; 62
     d9c:	8b 83       	std	Y+3, r24	; 0x03
     d9e:	6c 83       	std	Y+4, r22	; 0x04

	u8 Local_U8Flag= U8_NOERROR, Local_U8Port=0;
     da0:	81 e0       	ldi	r24, 0x01	; 1
     da2:	8a 83       	std	Y+2, r24	; 0x02
     da4:	19 82       	std	Y+1, r1	; 0x01



	if ( Copy_U8PinIdx > DIO_U8PINS_ALL )
     da6:	8b 81       	ldd	r24, Y+3	; 0x03
     da8:	81 32       	cpi	r24, 0x21	; 33
     daa:	10 f0       	brcs	.+4      	; 0xdb0 <DIO_U8WritePinVal+0x22>
		{
			Local_U8Flag= U8_ERROR;
     dac:	1a 82       	std	Y+2, r1	; 0x02
     dae:	63 c0       	rjmp	.+198    	; 0xe76 <DIO_U8WritePinVal+0xe8>
		}
		else
		{

			Local_U8Port = Copy_U8PinIdx/8;
     db0:	8b 81       	ldd	r24, Y+3	; 0x03
     db2:	86 95       	lsr	r24
     db4:	86 95       	lsr	r24
     db6:	86 95       	lsr	r24
     db8:	89 83       	std	Y+1, r24	; 0x01
			Copy_U8PinIdx %= 8;
     dba:	8b 81       	ldd	r24, Y+3	; 0x03
     dbc:	87 70       	andi	r24, 0x07	; 7
     dbe:	8b 83       	std	Y+3, r24	; 0x03
			switch (Copy_U8PinVal)
     dc0:	8c 81       	ldd	r24, Y+4	; 0x04
     dc2:	28 2f       	mov	r18, r24
     dc4:	30 e0       	ldi	r19, 0x00	; 0
     dc6:	3e 83       	std	Y+6, r19	; 0x06
     dc8:	2d 83       	std	Y+5, r18	; 0x05
     dca:	8d 81       	ldd	r24, Y+5	; 0x05
     dcc:	9e 81       	ldd	r25, Y+6	; 0x06
     dce:	00 97       	sbiw	r24, 0x00	; 0
     dd0:	61 f1       	breq	.+88     	; 0xe2a <DIO_U8WritePinVal+0x9c>
     dd2:	2d 81       	ldd	r18, Y+5	; 0x05
     dd4:	3e 81       	ldd	r19, Y+6	; 0x06
     dd6:	21 30       	cpi	r18, 0x01	; 1
     dd8:	31 05       	cpc	r19, r1
     dda:	09 f0       	breq	.+2      	; 0xdde <DIO_U8WritePinVal+0x50>
     ddc:	4c c0       	rjmp	.+152    	; 0xe76 <DIO_U8WritePinVal+0xe8>
			{
				case DIO_U8HIGH: *DIO_U8RegSel[1][Local_U8Port] = SetBit(*DIO_U8RegSel[1][Local_U8Port], Copy_U8PinIdx); break;
     dde:	89 81       	ldd	r24, Y+1	; 0x01
     de0:	88 2f       	mov	r24, r24
     de2:	90 e0       	ldi	r25, 0x00	; 0
     de4:	04 96       	adiw	r24, 0x04	; 4
     de6:	88 0f       	add	r24, r24
     de8:	99 1f       	adc	r25, r25
     dea:	fc 01       	movw	r30, r24
     dec:	ef 57       	subi	r30, 0x7F	; 127
     dee:	fe 4f       	sbci	r31, 0xFE	; 254
     df0:	a0 81       	ld	r26, Z
     df2:	b1 81       	ldd	r27, Z+1	; 0x01
     df4:	8b 81       	ldd	r24, Y+3	; 0x03
     df6:	28 2f       	mov	r18, r24
     df8:	30 e0       	ldi	r19, 0x00	; 0
     dfa:	81 e0       	ldi	r24, 0x01	; 1
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	02 c0       	rjmp	.+4      	; 0xe04 <DIO_U8WritePinVal+0x76>
     e00:	88 0f       	add	r24, r24
     e02:	99 1f       	adc	r25, r25
     e04:	2a 95       	dec	r18
     e06:	e2 f7       	brpl	.-8      	; 0xe00 <DIO_U8WritePinVal+0x72>
     e08:	28 2f       	mov	r18, r24
     e0a:	89 81       	ldd	r24, Y+1	; 0x01
     e0c:	88 2f       	mov	r24, r24
     e0e:	90 e0       	ldi	r25, 0x00	; 0
     e10:	04 96       	adiw	r24, 0x04	; 4
     e12:	88 0f       	add	r24, r24
     e14:	99 1f       	adc	r25, r25
     e16:	fc 01       	movw	r30, r24
     e18:	ef 57       	subi	r30, 0x7F	; 127
     e1a:	fe 4f       	sbci	r31, 0xFE	; 254
     e1c:	01 90       	ld	r0, Z+
     e1e:	f0 81       	ld	r31, Z
     e20:	e0 2d       	mov	r30, r0
     e22:	80 81       	ld	r24, Z
     e24:	82 2b       	or	r24, r18
     e26:	8c 93       	st	X, r24
     e28:	26 c0       	rjmp	.+76     	; 0xe76 <DIO_U8WritePinVal+0xe8>
				case DIO_U8LOW:  *DIO_U8RegSel[1][Local_U8Port] = ClrBit(*DIO_U8RegSel[1][Local_U8Port], Copy_U8PinIdx); break;
     e2a:	89 81       	ldd	r24, Y+1	; 0x01
     e2c:	88 2f       	mov	r24, r24
     e2e:	90 e0       	ldi	r25, 0x00	; 0
     e30:	04 96       	adiw	r24, 0x04	; 4
     e32:	88 0f       	add	r24, r24
     e34:	99 1f       	adc	r25, r25
     e36:	fc 01       	movw	r30, r24
     e38:	ef 57       	subi	r30, 0x7F	; 127
     e3a:	fe 4f       	sbci	r31, 0xFE	; 254
     e3c:	a0 81       	ld	r26, Z
     e3e:	b1 81       	ldd	r27, Z+1	; 0x01
     e40:	8b 81       	ldd	r24, Y+3	; 0x03
     e42:	28 2f       	mov	r18, r24
     e44:	30 e0       	ldi	r19, 0x00	; 0
     e46:	81 e0       	ldi	r24, 0x01	; 1
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	02 c0       	rjmp	.+4      	; 0xe50 <DIO_U8WritePinVal+0xc2>
     e4c:	88 0f       	add	r24, r24
     e4e:	99 1f       	adc	r25, r25
     e50:	2a 95       	dec	r18
     e52:	e2 f7       	brpl	.-8      	; 0xe4c <DIO_U8WritePinVal+0xbe>
     e54:	28 2f       	mov	r18, r24
     e56:	20 95       	com	r18
     e58:	89 81       	ldd	r24, Y+1	; 0x01
     e5a:	88 2f       	mov	r24, r24
     e5c:	90 e0       	ldi	r25, 0x00	; 0
     e5e:	04 96       	adiw	r24, 0x04	; 4
     e60:	88 0f       	add	r24, r24
     e62:	99 1f       	adc	r25, r25
     e64:	fc 01       	movw	r30, r24
     e66:	ef 57       	subi	r30, 0x7F	; 127
     e68:	fe 4f       	sbci	r31, 0xFE	; 254
     e6a:	01 90       	ld	r0, Z+
     e6c:	f0 81       	ld	r31, Z
     e6e:	e0 2d       	mov	r30, r0
     e70:	80 81       	ld	r24, Z
     e72:	82 23       	and	r24, r18
     e74:	8c 93       	st	X, r24
			}
		}


	return Local_U8Flag;
     e76:	8a 81       	ldd	r24, Y+2	; 0x02
}
     e78:	26 96       	adiw	r28, 0x06	; 6
     e7a:	0f b6       	in	r0, 0x3f	; 63
     e7c:	f8 94       	cli
     e7e:	de bf       	out	0x3e, r29	; 62
     e80:	0f be       	out	0x3f, r0	; 63
     e82:	cd bf       	out	0x3d, r28	; 61
     e84:	cf 91       	pop	r28
     e86:	df 91       	pop	r29
     e88:	08 95       	ret

00000e8a <DIO_U8ReadPortVal>:

extern u8 DIO_U8ReadPortVal(u8 Copy_U8PortIdx, u8* Copy_U8PtrToVal)
{
     e8a:	df 93       	push	r29
     e8c:	cf 93       	push	r28
     e8e:	00 d0       	rcall	.+0      	; 0xe90 <DIO_U8ReadPortVal+0x6>
     e90:	00 d0       	rcall	.+0      	; 0xe92 <DIO_U8ReadPortVal+0x8>
     e92:	cd b7       	in	r28, 0x3d	; 61
     e94:	de b7       	in	r29, 0x3e	; 62
     e96:	8a 83       	std	Y+2, r24	; 0x02
     e98:	7c 83       	std	Y+4, r23	; 0x04
     e9a:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_U8Flag= U8_NOERROR;
     e9c:	81 e0       	ldi	r24, 0x01	; 1
     e9e:	89 83       	std	Y+1, r24	; 0x01
	if ( Copy_U8PortIdx > DIO_U8PORTS_ALL )
     ea0:	8a 81       	ldd	r24, Y+2	; 0x02
     ea2:	85 30       	cpi	r24, 0x05	; 5
     ea4:	10 f0       	brcs	.+4      	; 0xeaa <DIO_U8ReadPortVal+0x20>
		{
			Local_U8Flag= U8_ERROR;
     ea6:	19 82       	std	Y+1, r1	; 0x01
     ea8:	0f c0       	rjmp	.+30     	; 0xec8 <DIO_U8ReadPortVal+0x3e>
		}
		else
		{
			* Copy_U8PtrToVal = *DIO_U8RegSel[0][Copy_U8PortIdx];
     eaa:	8a 81       	ldd	r24, Y+2	; 0x02
     eac:	88 2f       	mov	r24, r24
     eae:	90 e0       	ldi	r25, 0x00	; 0
     eb0:	88 0f       	add	r24, r24
     eb2:	99 1f       	adc	r25, r25
     eb4:	fc 01       	movw	r30, r24
     eb6:	ef 57       	subi	r30, 0x7F	; 127
     eb8:	fe 4f       	sbci	r31, 0xFE	; 254
     eba:	01 90       	ld	r0, Z+
     ebc:	f0 81       	ld	r31, Z
     ebe:	e0 2d       	mov	r30, r0
     ec0:	80 81       	ld	r24, Z
     ec2:	eb 81       	ldd	r30, Y+3	; 0x03
     ec4:	fc 81       	ldd	r31, Y+4	; 0x04
     ec6:	80 83       	st	Z, r24
		}
	return Local_U8Flag;
     ec8:	89 81       	ldd	r24, Y+1	; 0x01
}
     eca:	0f 90       	pop	r0
     ecc:	0f 90       	pop	r0
     ece:	0f 90       	pop	r0
     ed0:	0f 90       	pop	r0
     ed2:	cf 91       	pop	r28
     ed4:	df 91       	pop	r29
     ed6:	08 95       	ret

00000ed8 <DIO_U8WritePortVal>:

u8 DIO_U8WritePortVal(u8 Copy_U8PortIdx, u8 Copy_U8PortVal)
{
     ed8:	df 93       	push	r29
     eda:	cf 93       	push	r28
     edc:	00 d0       	rcall	.+0      	; 0xede <DIO_U8WritePortVal+0x6>
     ede:	0f 92       	push	r0
     ee0:	cd b7       	in	r28, 0x3d	; 61
     ee2:	de b7       	in	r29, 0x3e	; 62
     ee4:	8a 83       	std	Y+2, r24	; 0x02
     ee6:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_U8Flag= U8_NOERROR;
     ee8:	81 e0       	ldi	r24, 0x01	; 1
     eea:	89 83       	std	Y+1, r24	; 0x01
	if ( Copy_U8PortIdx > DIO_U8PORTS_ALL )
     eec:	8a 81       	ldd	r24, Y+2	; 0x02
     eee:	85 30       	cpi	r24, 0x05	; 5
     ef0:	10 f0       	brcs	.+4      	; 0xef6 <DIO_U8WritePortVal+0x1e>
		{
			Local_U8Flag= U8_ERROR;
     ef2:	19 82       	std	Y+1, r1	; 0x01
     ef4:	0e c0       	rjmp	.+28     	; 0xf12 <DIO_U8WritePortVal+0x3a>
		}
		else
		{
			Assign(*DIO_U8RegSel[1][Copy_U8PortIdx], Copy_U8PortVal);
     ef6:	8a 81       	ldd	r24, Y+2	; 0x02
     ef8:	88 2f       	mov	r24, r24
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	04 96       	adiw	r24, 0x04	; 4
     efe:	88 0f       	add	r24, r24
     f00:	99 1f       	adc	r25, r25
     f02:	fc 01       	movw	r30, r24
     f04:	ef 57       	subi	r30, 0x7F	; 127
     f06:	fe 4f       	sbci	r31, 0xFE	; 254
     f08:	01 90       	ld	r0, Z+
     f0a:	f0 81       	ld	r31, Z
     f0c:	e0 2d       	mov	r30, r0
     f0e:	8b 81       	ldd	r24, Y+3	; 0x03
     f10:	80 83       	st	Z, r24
		}
	return Local_U8Flag;
     f12:	89 81       	ldd	r24, Y+1	; 0x01
}
     f14:	0f 90       	pop	r0
     f16:	0f 90       	pop	r0
     f18:	0f 90       	pop	r0
     f1a:	cf 91       	pop	r28
     f1c:	df 91       	pop	r29
     f1e:	08 95       	ret

00000f20 <DIO_U8WritePinDir>:

//??????????//
u8 DIO_U8WritePinDir(u8 Copy_U8PinIdx, u8 Copy_U8PinDir)
{
     f20:	df 93       	push	r29
     f22:	cf 93       	push	r28
     f24:	00 d0       	rcall	.+0      	; 0xf26 <DIO_U8WritePinDir+0x6>
     f26:	00 d0       	rcall	.+0      	; 0xf28 <DIO_U8WritePinDir+0x8>
     f28:	00 d0       	rcall	.+0      	; 0xf2a <DIO_U8WritePinDir+0xa>
     f2a:	cd b7       	in	r28, 0x3d	; 61
     f2c:	de b7       	in	r29, 0x3e	; 62
     f2e:	8b 83       	std	Y+3, r24	; 0x03
     f30:	6c 83       	std	Y+4, r22	; 0x04
	u8 Local_U8Flag= U8_NOERROR, Local_U8Port=0;
     f32:	81 e0       	ldi	r24, 0x01	; 1
     f34:	8a 83       	std	Y+2, r24	; 0x02
     f36:	19 82       	std	Y+1, r1	; 0x01
	if ( Copy_U8PinIdx > DIO_U8PINS_ALL )
     f38:	8b 81       	ldd	r24, Y+3	; 0x03
     f3a:	81 32       	cpi	r24, 0x21	; 33
     f3c:	10 f0       	brcs	.+4      	; 0xf42 <DIO_U8WritePinDir+0x22>
		{
			Local_U8Flag= U8_ERROR;
     f3e:	1a 82       	std	Y+2, r1	; 0x02
     f40:	63 c0       	rjmp	.+198    	; 0x1008 <DIO_U8WritePinDir+0xe8>
		}
		else
		{

			Local_U8Port = Copy_U8PinIdx/8;
     f42:	8b 81       	ldd	r24, Y+3	; 0x03
     f44:	86 95       	lsr	r24
     f46:	86 95       	lsr	r24
     f48:	86 95       	lsr	r24
     f4a:	89 83       	std	Y+1, r24	; 0x01
			Copy_U8PinIdx %= 8;
     f4c:	8b 81       	ldd	r24, Y+3	; 0x03
     f4e:	87 70       	andi	r24, 0x07	; 7
     f50:	8b 83       	std	Y+3, r24	; 0x03
			switch (Copy_U8PinDir)
     f52:	8c 81       	ldd	r24, Y+4	; 0x04
     f54:	28 2f       	mov	r18, r24
     f56:	30 e0       	ldi	r19, 0x00	; 0
     f58:	3e 83       	std	Y+6, r19	; 0x06
     f5a:	2d 83       	std	Y+5, r18	; 0x05
     f5c:	8d 81       	ldd	r24, Y+5	; 0x05
     f5e:	9e 81       	ldd	r25, Y+6	; 0x06
     f60:	00 97       	sbiw	r24, 0x00	; 0
     f62:	61 f1       	breq	.+88     	; 0xfbc <DIO_U8WritePinDir+0x9c>
     f64:	2d 81       	ldd	r18, Y+5	; 0x05
     f66:	3e 81       	ldd	r19, Y+6	; 0x06
     f68:	21 30       	cpi	r18, 0x01	; 1
     f6a:	31 05       	cpc	r19, r1
     f6c:	09 f0       	breq	.+2      	; 0xf70 <DIO_U8WritePinDir+0x50>
     f6e:	4c c0       	rjmp	.+152    	; 0x1008 <DIO_U8WritePinDir+0xe8>
			{
				case DIO_U8OUTPUT: *DIO_U8RegSel[2][Local_U8Port] = SetBit(*DIO_U8RegSel[2][Local_U8Port], Copy_U8PinIdx); break;
     f70:	89 81       	ldd	r24, Y+1	; 0x01
     f72:	88 2f       	mov	r24, r24
     f74:	90 e0       	ldi	r25, 0x00	; 0
     f76:	08 96       	adiw	r24, 0x08	; 8
     f78:	88 0f       	add	r24, r24
     f7a:	99 1f       	adc	r25, r25
     f7c:	fc 01       	movw	r30, r24
     f7e:	ef 57       	subi	r30, 0x7F	; 127
     f80:	fe 4f       	sbci	r31, 0xFE	; 254
     f82:	a0 81       	ld	r26, Z
     f84:	b1 81       	ldd	r27, Z+1	; 0x01
     f86:	8b 81       	ldd	r24, Y+3	; 0x03
     f88:	28 2f       	mov	r18, r24
     f8a:	30 e0       	ldi	r19, 0x00	; 0
     f8c:	81 e0       	ldi	r24, 0x01	; 1
     f8e:	90 e0       	ldi	r25, 0x00	; 0
     f90:	02 c0       	rjmp	.+4      	; 0xf96 <DIO_U8WritePinDir+0x76>
     f92:	88 0f       	add	r24, r24
     f94:	99 1f       	adc	r25, r25
     f96:	2a 95       	dec	r18
     f98:	e2 f7       	brpl	.-8      	; 0xf92 <DIO_U8WritePinDir+0x72>
     f9a:	28 2f       	mov	r18, r24
     f9c:	89 81       	ldd	r24, Y+1	; 0x01
     f9e:	88 2f       	mov	r24, r24
     fa0:	90 e0       	ldi	r25, 0x00	; 0
     fa2:	08 96       	adiw	r24, 0x08	; 8
     fa4:	88 0f       	add	r24, r24
     fa6:	99 1f       	adc	r25, r25
     fa8:	fc 01       	movw	r30, r24
     faa:	ef 57       	subi	r30, 0x7F	; 127
     fac:	fe 4f       	sbci	r31, 0xFE	; 254
     fae:	01 90       	ld	r0, Z+
     fb0:	f0 81       	ld	r31, Z
     fb2:	e0 2d       	mov	r30, r0
     fb4:	80 81       	ld	r24, Z
     fb6:	82 2b       	or	r24, r18
     fb8:	8c 93       	st	X, r24
     fba:	26 c0       	rjmp	.+76     	; 0x1008 <DIO_U8WritePinDir+0xe8>
				case DIO_U8INPUT:  *DIO_U8RegSel[2][Local_U8Port] = ClrBit(*DIO_U8RegSel[2][Local_U8Port], Copy_U8PinIdx); break;
     fbc:	89 81       	ldd	r24, Y+1	; 0x01
     fbe:	88 2f       	mov	r24, r24
     fc0:	90 e0       	ldi	r25, 0x00	; 0
     fc2:	08 96       	adiw	r24, 0x08	; 8
     fc4:	88 0f       	add	r24, r24
     fc6:	99 1f       	adc	r25, r25
     fc8:	fc 01       	movw	r30, r24
     fca:	ef 57       	subi	r30, 0x7F	; 127
     fcc:	fe 4f       	sbci	r31, 0xFE	; 254
     fce:	a0 81       	ld	r26, Z
     fd0:	b1 81       	ldd	r27, Z+1	; 0x01
     fd2:	8b 81       	ldd	r24, Y+3	; 0x03
     fd4:	28 2f       	mov	r18, r24
     fd6:	30 e0       	ldi	r19, 0x00	; 0
     fd8:	81 e0       	ldi	r24, 0x01	; 1
     fda:	90 e0       	ldi	r25, 0x00	; 0
     fdc:	02 c0       	rjmp	.+4      	; 0xfe2 <DIO_U8WritePinDir+0xc2>
     fde:	88 0f       	add	r24, r24
     fe0:	99 1f       	adc	r25, r25
     fe2:	2a 95       	dec	r18
     fe4:	e2 f7       	brpl	.-8      	; 0xfde <DIO_U8WritePinDir+0xbe>
     fe6:	28 2f       	mov	r18, r24
     fe8:	20 95       	com	r18
     fea:	89 81       	ldd	r24, Y+1	; 0x01
     fec:	88 2f       	mov	r24, r24
     fee:	90 e0       	ldi	r25, 0x00	; 0
     ff0:	08 96       	adiw	r24, 0x08	; 8
     ff2:	88 0f       	add	r24, r24
     ff4:	99 1f       	adc	r25, r25
     ff6:	fc 01       	movw	r30, r24
     ff8:	ef 57       	subi	r30, 0x7F	; 127
     ffa:	fe 4f       	sbci	r31, 0xFE	; 254
     ffc:	01 90       	ld	r0, Z+
     ffe:	f0 81       	ld	r31, Z
    1000:	e0 2d       	mov	r30, r0
    1002:	80 81       	ld	r24, Z
    1004:	82 23       	and	r24, r18
    1006:	8c 93       	st	X, r24
			}

		}
	return Local_U8Flag;
    1008:	8a 81       	ldd	r24, Y+2	; 0x02

}
    100a:	26 96       	adiw	r28, 0x06	; 6
    100c:	0f b6       	in	r0, 0x3f	; 63
    100e:	f8 94       	cli
    1010:	de bf       	out	0x3e, r29	; 62
    1012:	0f be       	out	0x3f, r0	; 63
    1014:	cd bf       	out	0x3d, r28	; 61
    1016:	cf 91       	pop	r28
    1018:	df 91       	pop	r29
    101a:	08 95       	ret

0000101c <DIO_U8WritePortDir>:

u8 DIO_U8WritePortDir(u8 Copy_U8PortIdx, u8 Copy_U8PortDir)
{
    101c:	df 93       	push	r29
    101e:	cf 93       	push	r28
    1020:	00 d0       	rcall	.+0      	; 0x1022 <DIO_U8WritePortDir+0x6>
    1022:	0f 92       	push	r0
    1024:	cd b7       	in	r28, 0x3d	; 61
    1026:	de b7       	in	r29, 0x3e	; 62
    1028:	8a 83       	std	Y+2, r24	; 0x02
    102a:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_U8Flag= U8_NOERROR;
    102c:	81 e0       	ldi	r24, 0x01	; 1
    102e:	89 83       	std	Y+1, r24	; 0x01
	if ( Copy_U8PortIdx > DIO_U8PORTS_ALL )
    1030:	8a 81       	ldd	r24, Y+2	; 0x02
    1032:	85 30       	cpi	r24, 0x05	; 5
    1034:	10 f0       	brcs	.+4      	; 0x103a <DIO_U8WritePortDir+0x1e>
		{
			Local_U8Flag= U8_ERROR;
    1036:	19 82       	std	Y+1, r1	; 0x01
    1038:	0e c0       	rjmp	.+28     	; 0x1056 <DIO_U8WritePortDir+0x3a>
		}
		else
		{
			Assign(*DIO_U8RegSel[2][Copy_U8PortIdx], Copy_U8PortDir);
    103a:	8a 81       	ldd	r24, Y+2	; 0x02
    103c:	88 2f       	mov	r24, r24
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	08 96       	adiw	r24, 0x08	; 8
    1042:	88 0f       	add	r24, r24
    1044:	99 1f       	adc	r25, r25
    1046:	fc 01       	movw	r30, r24
    1048:	ef 57       	subi	r30, 0x7F	; 127
    104a:	fe 4f       	sbci	r31, 0xFE	; 254
    104c:	01 90       	ld	r0, Z+
    104e:	f0 81       	ld	r31, Z
    1050:	e0 2d       	mov	r30, r0
    1052:	8b 81       	ldd	r24, Y+3	; 0x03
    1054:	80 83       	st	Z, r24
		}
	return Local_U8Flag;
    1056:	89 81       	ldd	r24, Y+1	; 0x01
}
    1058:	0f 90       	pop	r0
    105a:	0f 90       	pop	r0
    105c:	0f 90       	pop	r0
    105e:	cf 91       	pop	r28
    1060:	df 91       	pop	r29
    1062:	08 95       	ret

00001064 <DIO_U8ReadPinDir>:

u8 DIO_U8ReadPinDir(u8 Copy_U8PinIdx, u8* Copy_U8PtrToDir)
{
    1064:	df 93       	push	r29
    1066:	cf 93       	push	r28
    1068:	00 d0       	rcall	.+0      	; 0x106a <DIO_U8ReadPinDir+0x6>
    106a:	00 d0       	rcall	.+0      	; 0x106c <DIO_U8ReadPinDir+0x8>
    106c:	0f 92       	push	r0
    106e:	cd b7       	in	r28, 0x3d	; 61
    1070:	de b7       	in	r29, 0x3e	; 62
    1072:	8b 83       	std	Y+3, r24	; 0x03
    1074:	7d 83       	std	Y+5, r23	; 0x05
    1076:	6c 83       	std	Y+4, r22	; 0x04
	u8 Local_U8Flag= U8_NOERROR, Local_U8Port=0;
    1078:	81 e0       	ldi	r24, 0x01	; 1
    107a:	8a 83       	std	Y+2, r24	; 0x02
    107c:	19 82       	std	Y+1, r1	; 0x01
	if ( Copy_U8PinIdx > DIO_U8PINS_ALL )
    107e:	8b 81       	ldd	r24, Y+3	; 0x03
    1080:	81 32       	cpi	r24, 0x21	; 33
    1082:	10 f0       	brcs	.+4      	; 0x1088 <DIO_U8ReadPinDir+0x24>
	{
		Local_U8Flag= U8_ERROR;
    1084:	1a 82       	std	Y+2, r1	; 0x02
    1086:	25 c0       	rjmp	.+74     	; 0x10d2 <DIO_U8ReadPinDir+0x6e>
	}
	else
	{

	Local_U8Port = Copy_U8PinIdx/8;
    1088:	8b 81       	ldd	r24, Y+3	; 0x03
    108a:	86 95       	lsr	r24
    108c:	86 95       	lsr	r24
    108e:	86 95       	lsr	r24
    1090:	89 83       	std	Y+1, r24	; 0x01
	Copy_U8PinIdx %= 8;
    1092:	8b 81       	ldd	r24, Y+3	; 0x03
    1094:	87 70       	andi	r24, 0x07	; 7
    1096:	8b 83       	std	Y+3, r24	; 0x03
	* Copy_U8PtrToDir = GetBit(*DIO_U8RegSel[2][Local_U8Port], Copy_U8PinIdx);
    1098:	89 81       	ldd	r24, Y+1	; 0x01
    109a:	88 2f       	mov	r24, r24
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	08 96       	adiw	r24, 0x08	; 8
    10a0:	88 0f       	add	r24, r24
    10a2:	99 1f       	adc	r25, r25
    10a4:	fc 01       	movw	r30, r24
    10a6:	ef 57       	subi	r30, 0x7F	; 127
    10a8:	fe 4f       	sbci	r31, 0xFE	; 254
    10aa:	01 90       	ld	r0, Z+
    10ac:	f0 81       	ld	r31, Z
    10ae:	e0 2d       	mov	r30, r0
    10b0:	80 81       	ld	r24, Z
    10b2:	28 2f       	mov	r18, r24
    10b4:	30 e0       	ldi	r19, 0x00	; 0
    10b6:	8b 81       	ldd	r24, Y+3	; 0x03
    10b8:	88 2f       	mov	r24, r24
    10ba:	90 e0       	ldi	r25, 0x00	; 0
    10bc:	a9 01       	movw	r20, r18
    10be:	02 c0       	rjmp	.+4      	; 0x10c4 <DIO_U8ReadPinDir+0x60>
    10c0:	55 95       	asr	r21
    10c2:	47 95       	ror	r20
    10c4:	8a 95       	dec	r24
    10c6:	e2 f7       	brpl	.-8      	; 0x10c0 <DIO_U8ReadPinDir+0x5c>
    10c8:	ca 01       	movw	r24, r20
    10ca:	81 70       	andi	r24, 0x01	; 1
    10cc:	ec 81       	ldd	r30, Y+4	; 0x04
    10ce:	fd 81       	ldd	r31, Y+5	; 0x05
    10d0:	80 83       	st	Z, r24
	}
	return Local_U8Flag;
    10d2:	8a 81       	ldd	r24, Y+2	; 0x02
}
    10d4:	0f 90       	pop	r0
    10d6:	0f 90       	pop	r0
    10d8:	0f 90       	pop	r0
    10da:	0f 90       	pop	r0
    10dc:	0f 90       	pop	r0
    10de:	cf 91       	pop	r28
    10e0:	df 91       	pop	r29
    10e2:	08 95       	ret

000010e4 <DIO_U8ReadPortDir>:

u8 DIO_U8ReadPortDir(u8 Copy_U8PortIdx, u8* Copy_U8PtrToDir)
{
    10e4:	df 93       	push	r29
    10e6:	cf 93       	push	r28
    10e8:	00 d0       	rcall	.+0      	; 0x10ea <DIO_U8ReadPortDir+0x6>
    10ea:	00 d0       	rcall	.+0      	; 0x10ec <DIO_U8ReadPortDir+0x8>
    10ec:	cd b7       	in	r28, 0x3d	; 61
    10ee:	de b7       	in	r29, 0x3e	; 62
    10f0:	8a 83       	std	Y+2, r24	; 0x02
    10f2:	7c 83       	std	Y+4, r23	; 0x04
    10f4:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_U8Flag= U8_NOERROR;
    10f6:	81 e0       	ldi	r24, 0x01	; 1
    10f8:	89 83       	std	Y+1, r24	; 0x01
	if ( Copy_U8PortIdx > DIO_U8PORTS_ALL )
    10fa:	8a 81       	ldd	r24, Y+2	; 0x02
    10fc:	85 30       	cpi	r24, 0x05	; 5
    10fe:	10 f0       	brcs	.+4      	; 0x1104 <DIO_U8ReadPortDir+0x20>
	{
		Local_U8Flag= U8_ERROR;
    1100:	19 82       	std	Y+1, r1	; 0x01
    1102:	10 c0       	rjmp	.+32     	; 0x1124 <DIO_U8ReadPortDir+0x40>
	}
	else
	{
	* Copy_U8PtrToDir = *DIO_U8RegSel[2][Copy_U8PortIdx];
    1104:	8a 81       	ldd	r24, Y+2	; 0x02
    1106:	88 2f       	mov	r24, r24
    1108:	90 e0       	ldi	r25, 0x00	; 0
    110a:	08 96       	adiw	r24, 0x08	; 8
    110c:	88 0f       	add	r24, r24
    110e:	99 1f       	adc	r25, r25
    1110:	fc 01       	movw	r30, r24
    1112:	ef 57       	subi	r30, 0x7F	; 127
    1114:	fe 4f       	sbci	r31, 0xFE	; 254
    1116:	01 90       	ld	r0, Z+
    1118:	f0 81       	ld	r31, Z
    111a:	e0 2d       	mov	r30, r0
    111c:	80 81       	ld	r24, Z
    111e:	eb 81       	ldd	r30, Y+3	; 0x03
    1120:	fc 81       	ldd	r31, Y+4	; 0x04
    1122:	80 83       	st	Z, r24
	}
	return Local_U8Flag;
    1124:	89 81       	ldd	r24, Y+1	; 0x01
}
    1126:	0f 90       	pop	r0
    1128:	0f 90       	pop	r0
    112a:	0f 90       	pop	r0
    112c:	0f 90       	pop	r0
    112e:	cf 91       	pop	r28
    1130:	df 91       	pop	r29
    1132:	08 95       	ret

00001134 <LCD_voidWriteString>:
#include "LCD_config.h"
#include "LCD_private.h"
#include "Delay.h"
#include "Delay_config.h"

void LCD_voidWriteString(u8* Copy_U8PtrToVal) {
    1134:	df 93       	push	r29
    1136:	cf 93       	push	r28
    1138:	cd b7       	in	r28, 0x3d	; 61
    113a:	de b7       	in	r29, 0x3e	; 62
    113c:	27 97       	sbiw	r28, 0x07	; 7
    113e:	0f b6       	in	r0, 0x3f	; 63
    1140:	f8 94       	cli
    1142:	de bf       	out	0x3e, r29	; 62
    1144:	0f be       	out	0x3f, r0	; 63
    1146:	cd bf       	out	0x3d, r28	; 61
    1148:	9f 83       	std	Y+7, r25	; 0x07
    114a:	8e 83       	std	Y+6, r24	; 0x06
	u8 Local_U8LoopCounter = 0;
    114c:	1d 82       	std	Y+5, r1	; 0x05
    114e:	46 c0       	rjmp	.+140    	; 0x11dc <LCD_voidWriteString+0xa8>
	while (Copy_U8PtrToVal[Local_U8LoopCounter] != 0) {
		DIO_U8WritePortVal(LCD_DATAPORT, Copy_U8PtrToVal[Local_U8LoopCounter]);
    1150:	8d 81       	ldd	r24, Y+5	; 0x05
    1152:	28 2f       	mov	r18, r24
    1154:	30 e0       	ldi	r19, 0x00	; 0
    1156:	8e 81       	ldd	r24, Y+6	; 0x06
    1158:	9f 81       	ldd	r25, Y+7	; 0x07
    115a:	fc 01       	movw	r30, r24
    115c:	e2 0f       	add	r30, r18
    115e:	f3 1f       	adc	r31, r19
    1160:	90 81       	ld	r25, Z
    1162:	83 e0       	ldi	r24, 0x03	; 3
    1164:	69 2f       	mov	r22, r25
    1166:	0e 94 6c 07 	call	0xed8	; 0xed8 <DIO_U8WritePortVal>
		DIO_U8WritePinVal(LCD_RS, DIO_U8HIGH);
    116a:	80 e1       	ldi	r24, 0x10	; 16
    116c:	61 e0       	ldi	r22, 0x01	; 1
    116e:	0e 94 c7 06 	call	0xd8e	; 0xd8e <DIO_U8WritePinVal>
		DIO_U8WritePinVal(LCD_RW, DIO_U8LOW);
    1172:	81 e1       	ldi	r24, 0x11	; 17
    1174:	60 e0       	ldi	r22, 0x00	; 0
    1176:	0e 94 c7 06 	call	0xd8e	; 0xd8e <DIO_U8WritePinVal>
		DIO_U8WritePinVal(LCD_E, DIO_U8HIGH);
    117a:	82 e1       	ldi	r24, 0x12	; 18
    117c:	61 e0       	ldi	r22, 0x01	; 1
    117e:	0e 94 c7 06 	call	0xd8e	; 0xd8e <DIO_U8WritePinVal>
		Delay_ms(1);
    1182:	80 e0       	ldi	r24, 0x00	; 0
    1184:	90 e0       	ldi	r25, 0x00	; 0
    1186:	a0 e4       	ldi	r26, 0x40	; 64
    1188:	b0 e4       	ldi	r27, 0x40	; 64
    118a:	89 83       	std	Y+1, r24	; 0x01
    118c:	9a 83       	std	Y+2, r25	; 0x02
    118e:	ab 83       	std	Y+3, r26	; 0x03
    1190:	bc 83       	std	Y+4, r27	; 0x04
    1192:	11 c0       	rjmp	.+34     	; 0x11b6 <LCD_voidWriteString+0x82>
    1194:	00 00       	nop
    1196:	69 81       	ldd	r22, Y+1	; 0x01
    1198:	7a 81       	ldd	r23, Y+2	; 0x02
    119a:	8b 81       	ldd	r24, Y+3	; 0x03
    119c:	9c 81       	ldd	r25, Y+4	; 0x04
    119e:	20 e0       	ldi	r18, 0x00	; 0
    11a0:	30 e0       	ldi	r19, 0x00	; 0
    11a2:	40 e8       	ldi	r20, 0x80	; 128
    11a4:	5f e3       	ldi	r21, 0x3F	; 63
    11a6:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
    11aa:	dc 01       	movw	r26, r24
    11ac:	cb 01       	movw	r24, r22
    11ae:	89 83       	std	Y+1, r24	; 0x01
    11b0:	9a 83       	std	Y+2, r25	; 0x02
    11b2:	ab 83       	std	Y+3, r26	; 0x03
    11b4:	bc 83       	std	Y+4, r27	; 0x04
    11b6:	69 81       	ldd	r22, Y+1	; 0x01
    11b8:	7a 81       	ldd	r23, Y+2	; 0x02
    11ba:	8b 81       	ldd	r24, Y+3	; 0x03
    11bc:	9c 81       	ldd	r25, Y+4	; 0x04
    11be:	20 e0       	ldi	r18, 0x00	; 0
    11c0:	30 e0       	ldi	r19, 0x00	; 0
    11c2:	40 e0       	ldi	r20, 0x00	; 0
    11c4:	50 e0       	ldi	r21, 0x00	; 0
    11c6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    11ca:	18 16       	cp	r1, r24
    11cc:	1c f3       	brlt	.-58     	; 0x1194 <LCD_voidWriteString+0x60>
		DIO_U8WritePinVal(LCD_E, DIO_U8LOW);
    11ce:	82 e1       	ldi	r24, 0x12	; 18
    11d0:	60 e0       	ldi	r22, 0x00	; 0
    11d2:	0e 94 c7 06 	call	0xd8e	; 0xd8e <DIO_U8WritePinVal>
		Local_U8LoopCounter++;
    11d6:	8d 81       	ldd	r24, Y+5	; 0x05
    11d8:	8f 5f       	subi	r24, 0xFF	; 255
    11da:	8d 83       	std	Y+5, r24	; 0x05
#include "Delay.h"
#include "Delay_config.h"

void LCD_voidWriteString(u8* Copy_U8PtrToVal) {
	u8 Local_U8LoopCounter = 0;
	while (Copy_U8PtrToVal[Local_U8LoopCounter] != 0) {
    11dc:	8d 81       	ldd	r24, Y+5	; 0x05
    11de:	28 2f       	mov	r18, r24
    11e0:	30 e0       	ldi	r19, 0x00	; 0
    11e2:	8e 81       	ldd	r24, Y+6	; 0x06
    11e4:	9f 81       	ldd	r25, Y+7	; 0x07
    11e6:	fc 01       	movw	r30, r24
    11e8:	e2 0f       	add	r30, r18
    11ea:	f3 1f       	adc	r31, r19
    11ec:	80 81       	ld	r24, Z
    11ee:	88 23       	and	r24, r24
    11f0:	09 f0       	breq	.+2      	; 0x11f4 <LCD_voidWriteString+0xc0>
    11f2:	ae cf       	rjmp	.-164    	; 0x1150 <LCD_voidWriteString+0x1c>
		DIO_U8WritePinVal(LCD_E, DIO_U8HIGH);
		Delay_ms(1);
		DIO_U8WritePinVal(LCD_E, DIO_U8LOW);
		Local_U8LoopCounter++;
	}
}
    11f4:	27 96       	adiw	r28, 0x07	; 7
    11f6:	0f b6       	in	r0, 0x3f	; 63
    11f8:	f8 94       	cli
    11fa:	de bf       	out	0x3e, r29	; 62
    11fc:	0f be       	out	0x3f, r0	; 63
    11fe:	cd bf       	out	0x3d, r28	; 61
    1200:	cf 91       	pop	r28
    1202:	df 91       	pop	r29
    1204:	08 95       	ret

00001206 <LCD_voidStoreData>:

void LCD_voidStoreData(u8 Copy_U8Addr, u8* Copy_U8PtrToVal) {
    1206:	df 93       	push	r29
    1208:	cf 93       	push	r28
    120a:	00 d0       	rcall	.+0      	; 0x120c <LCD_voidStoreData+0x6>
    120c:	00 d0       	rcall	.+0      	; 0x120e <LCD_voidStoreData+0x8>
    120e:	0f 92       	push	r0
    1210:	cd b7       	in	r28, 0x3d	; 61
    1212:	de b7       	in	r29, 0x3e	; 62
    1214:	8b 83       	std	Y+3, r24	; 0x03
    1216:	7d 83       	std	Y+5, r23	; 0x05
    1218:	6c 83       	std	Y+4, r22	; 0x04
	u8 Local_InitialAdd = 0b01000000, Local_U8Counter;
    121a:	80 e4       	ldi	r24, 0x40	; 64
    121c:	8a 83       	std	Y+2, r24	; 0x02
	Local_InitialAdd |= Copy_U8Addr;
    121e:	9a 81       	ldd	r25, Y+2	; 0x02
    1220:	8b 81       	ldd	r24, Y+3	; 0x03
    1222:	89 2b       	or	r24, r25
    1224:	8a 83       	std	Y+2, r24	; 0x02
	LCD_voidWrite_Command(Local_InitialAdd);
    1226:	8a 81       	ldd	r24, Y+2	; 0x02
    1228:	0e 94 34 09 	call	0x1268	; 0x1268 <LCD_voidWrite_Command>
	for (Local_U8Counter = 0; Local_U8Counter < 8; Local_U8Counter++) {
    122c:	19 82       	std	Y+1, r1	; 0x01
    122e:	0e c0       	rjmp	.+28     	; 0x124c <LCD_voidStoreData+0x46>
		LCD_voidWrite_Data(Copy_U8PtrToVal[Local_U8Counter]);
    1230:	89 81       	ldd	r24, Y+1	; 0x01
    1232:	28 2f       	mov	r18, r24
    1234:	30 e0       	ldi	r19, 0x00	; 0
    1236:	8c 81       	ldd	r24, Y+4	; 0x04
    1238:	9d 81       	ldd	r25, Y+5	; 0x05
    123a:	fc 01       	movw	r30, r24
    123c:	e2 0f       	add	r30, r18
    123e:	f3 1f       	adc	r31, r19
    1240:	80 81       	ld	r24, Z
    1242:	0e 94 7e 09 	call	0x12fc	; 0x12fc <LCD_voidWrite_Data>

void LCD_voidStoreData(u8 Copy_U8Addr, u8* Copy_U8PtrToVal) {
	u8 Local_InitialAdd = 0b01000000, Local_U8Counter;
	Local_InitialAdd |= Copy_U8Addr;
	LCD_voidWrite_Command(Local_InitialAdd);
	for (Local_U8Counter = 0; Local_U8Counter < 8; Local_U8Counter++) {
    1246:	89 81       	ldd	r24, Y+1	; 0x01
    1248:	8f 5f       	subi	r24, 0xFF	; 255
    124a:	89 83       	std	Y+1, r24	; 0x01
    124c:	89 81       	ldd	r24, Y+1	; 0x01
    124e:	88 30       	cpi	r24, 0x08	; 8
    1250:	78 f3       	brcs	.-34     	; 0x1230 <LCD_voidStoreData+0x2a>
		LCD_voidWrite_Data(Copy_U8PtrToVal[Local_U8Counter]);
	}
	LCD_voidWrite_Command(0x80);
    1252:	80 e8       	ldi	r24, 0x80	; 128
    1254:	0e 94 34 09 	call	0x1268	; 0x1268 <LCD_voidWrite_Command>
}
    1258:	0f 90       	pop	r0
    125a:	0f 90       	pop	r0
    125c:	0f 90       	pop	r0
    125e:	0f 90       	pop	r0
    1260:	0f 90       	pop	r0
    1262:	cf 91       	pop	r28
    1264:	df 91       	pop	r29
    1266:	08 95       	ret

00001268 <LCD_voidWrite_Command>:

void LCD_voidWrite_Command(u8 Copy_U8Command) {
    1268:	df 93       	push	r29
    126a:	cf 93       	push	r28
    126c:	00 d0       	rcall	.+0      	; 0x126e <LCD_voidWrite_Command+0x6>
    126e:	00 d0       	rcall	.+0      	; 0x1270 <LCD_voidWrite_Command+0x8>
    1270:	0f 92       	push	r0
    1272:	cd b7       	in	r28, 0x3d	; 61
    1274:	de b7       	in	r29, 0x3e	; 62
    1276:	8d 83       	std	Y+5, r24	; 0x05

	DIO_U8WritePortVal(LCD_DATAPORT, Copy_U8Command);
    1278:	83 e0       	ldi	r24, 0x03	; 3
    127a:	6d 81       	ldd	r22, Y+5	; 0x05
    127c:	0e 94 6c 07 	call	0xed8	; 0xed8 <DIO_U8WritePortVal>
	DIO_U8WritePinVal(LCD_RS, DIO_U8LOW);
    1280:	80 e1       	ldi	r24, 0x10	; 16
    1282:	60 e0       	ldi	r22, 0x00	; 0
    1284:	0e 94 c7 06 	call	0xd8e	; 0xd8e <DIO_U8WritePinVal>
	DIO_U8WritePinVal(LCD_RW, DIO_U8LOW);
    1288:	81 e1       	ldi	r24, 0x11	; 17
    128a:	60 e0       	ldi	r22, 0x00	; 0
    128c:	0e 94 c7 06 	call	0xd8e	; 0xd8e <DIO_U8WritePinVal>
	DIO_U8WritePinVal(LCD_E, DIO_U8HIGH);
    1290:	82 e1       	ldi	r24, 0x12	; 18
    1292:	61 e0       	ldi	r22, 0x01	; 1
    1294:	0e 94 c7 06 	call	0xd8e	; 0xd8e <DIO_U8WritePinVal>
	Delay_ms(1);
    1298:	80 e0       	ldi	r24, 0x00	; 0
    129a:	90 e0       	ldi	r25, 0x00	; 0
    129c:	a0 e4       	ldi	r26, 0x40	; 64
    129e:	b0 e4       	ldi	r27, 0x40	; 64
    12a0:	89 83       	std	Y+1, r24	; 0x01
    12a2:	9a 83       	std	Y+2, r25	; 0x02
    12a4:	ab 83       	std	Y+3, r26	; 0x03
    12a6:	bc 83       	std	Y+4, r27	; 0x04
    12a8:	11 c0       	rjmp	.+34     	; 0x12cc <LCD_voidWrite_Command+0x64>
    12aa:	00 00       	nop
    12ac:	69 81       	ldd	r22, Y+1	; 0x01
    12ae:	7a 81       	ldd	r23, Y+2	; 0x02
    12b0:	8b 81       	ldd	r24, Y+3	; 0x03
    12b2:	9c 81       	ldd	r25, Y+4	; 0x04
    12b4:	20 e0       	ldi	r18, 0x00	; 0
    12b6:	30 e0       	ldi	r19, 0x00	; 0
    12b8:	40 e8       	ldi	r20, 0x80	; 128
    12ba:	5f e3       	ldi	r21, 0x3F	; 63
    12bc:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
    12c0:	dc 01       	movw	r26, r24
    12c2:	cb 01       	movw	r24, r22
    12c4:	89 83       	std	Y+1, r24	; 0x01
    12c6:	9a 83       	std	Y+2, r25	; 0x02
    12c8:	ab 83       	std	Y+3, r26	; 0x03
    12ca:	bc 83       	std	Y+4, r27	; 0x04
    12cc:	69 81       	ldd	r22, Y+1	; 0x01
    12ce:	7a 81       	ldd	r23, Y+2	; 0x02
    12d0:	8b 81       	ldd	r24, Y+3	; 0x03
    12d2:	9c 81       	ldd	r25, Y+4	; 0x04
    12d4:	20 e0       	ldi	r18, 0x00	; 0
    12d6:	30 e0       	ldi	r19, 0x00	; 0
    12d8:	40 e0       	ldi	r20, 0x00	; 0
    12da:	50 e0       	ldi	r21, 0x00	; 0
    12dc:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    12e0:	18 16       	cp	r1, r24
    12e2:	1c f3       	brlt	.-58     	; 0x12aa <LCD_voidWrite_Command+0x42>
	DIO_U8WritePinVal(LCD_E, DIO_U8LOW);
    12e4:	82 e1       	ldi	r24, 0x12	; 18
    12e6:	60 e0       	ldi	r22, 0x00	; 0
    12e8:	0e 94 c7 06 	call	0xd8e	; 0xd8e <DIO_U8WritePinVal>
}
    12ec:	0f 90       	pop	r0
    12ee:	0f 90       	pop	r0
    12f0:	0f 90       	pop	r0
    12f2:	0f 90       	pop	r0
    12f4:	0f 90       	pop	r0
    12f6:	cf 91       	pop	r28
    12f8:	df 91       	pop	r29
    12fa:	08 95       	ret

000012fc <LCD_voidWrite_Data>:

void LCD_voidWrite_Data(u8 Copy_U8Data) {
    12fc:	df 93       	push	r29
    12fe:	cf 93       	push	r28
    1300:	00 d0       	rcall	.+0      	; 0x1302 <LCD_voidWrite_Data+0x6>
    1302:	00 d0       	rcall	.+0      	; 0x1304 <LCD_voidWrite_Data+0x8>
    1304:	0f 92       	push	r0
    1306:	cd b7       	in	r28, 0x3d	; 61
    1308:	de b7       	in	r29, 0x3e	; 62
    130a:	8d 83       	std	Y+5, r24	; 0x05
	DIO_U8WritePortVal(LCD_DATAPORT, Copy_U8Data);
    130c:	83 e0       	ldi	r24, 0x03	; 3
    130e:	6d 81       	ldd	r22, Y+5	; 0x05
    1310:	0e 94 6c 07 	call	0xed8	; 0xed8 <DIO_U8WritePortVal>
	DIO_U8WritePinVal(LCD_RS, DIO_U8HIGH);
    1314:	80 e1       	ldi	r24, 0x10	; 16
    1316:	61 e0       	ldi	r22, 0x01	; 1
    1318:	0e 94 c7 06 	call	0xd8e	; 0xd8e <DIO_U8WritePinVal>
	DIO_U8WritePinVal(LCD_RW, DIO_U8LOW);
    131c:	81 e1       	ldi	r24, 0x11	; 17
    131e:	60 e0       	ldi	r22, 0x00	; 0
    1320:	0e 94 c7 06 	call	0xd8e	; 0xd8e <DIO_U8WritePinVal>
	DIO_U8WritePinVal(LCD_E, DIO_U8HIGH);
    1324:	82 e1       	ldi	r24, 0x12	; 18
    1326:	61 e0       	ldi	r22, 0x01	; 1
    1328:	0e 94 c7 06 	call	0xd8e	; 0xd8e <DIO_U8WritePinVal>
	Delay_ms(1);
    132c:	80 e0       	ldi	r24, 0x00	; 0
    132e:	90 e0       	ldi	r25, 0x00	; 0
    1330:	a0 e4       	ldi	r26, 0x40	; 64
    1332:	b0 e4       	ldi	r27, 0x40	; 64
    1334:	89 83       	std	Y+1, r24	; 0x01
    1336:	9a 83       	std	Y+2, r25	; 0x02
    1338:	ab 83       	std	Y+3, r26	; 0x03
    133a:	bc 83       	std	Y+4, r27	; 0x04
    133c:	11 c0       	rjmp	.+34     	; 0x1360 <LCD_voidWrite_Data+0x64>
    133e:	00 00       	nop
    1340:	69 81       	ldd	r22, Y+1	; 0x01
    1342:	7a 81       	ldd	r23, Y+2	; 0x02
    1344:	8b 81       	ldd	r24, Y+3	; 0x03
    1346:	9c 81       	ldd	r25, Y+4	; 0x04
    1348:	20 e0       	ldi	r18, 0x00	; 0
    134a:	30 e0       	ldi	r19, 0x00	; 0
    134c:	40 e8       	ldi	r20, 0x80	; 128
    134e:	5f e3       	ldi	r21, 0x3F	; 63
    1350:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
    1354:	dc 01       	movw	r26, r24
    1356:	cb 01       	movw	r24, r22
    1358:	89 83       	std	Y+1, r24	; 0x01
    135a:	9a 83       	std	Y+2, r25	; 0x02
    135c:	ab 83       	std	Y+3, r26	; 0x03
    135e:	bc 83       	std	Y+4, r27	; 0x04
    1360:	69 81       	ldd	r22, Y+1	; 0x01
    1362:	7a 81       	ldd	r23, Y+2	; 0x02
    1364:	8b 81       	ldd	r24, Y+3	; 0x03
    1366:	9c 81       	ldd	r25, Y+4	; 0x04
    1368:	20 e0       	ldi	r18, 0x00	; 0
    136a:	30 e0       	ldi	r19, 0x00	; 0
    136c:	40 e0       	ldi	r20, 0x00	; 0
    136e:	50 e0       	ldi	r21, 0x00	; 0
    1370:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1374:	18 16       	cp	r1, r24
    1376:	1c f3       	brlt	.-58     	; 0x133e <LCD_voidWrite_Data+0x42>
	DIO_U8WritePinVal(LCD_E, DIO_U8LOW);
    1378:	82 e1       	ldi	r24, 0x12	; 18
    137a:	60 e0       	ldi	r22, 0x00	; 0
    137c:	0e 94 c7 06 	call	0xd8e	; 0xd8e <DIO_U8WritePinVal>
	//DIO_U8WritePinVal(LCD_RS, DIO_U8LOW);
}
    1380:	0f 90       	pop	r0
    1382:	0f 90       	pop	r0
    1384:	0f 90       	pop	r0
    1386:	0f 90       	pop	r0
    1388:	0f 90       	pop	r0
    138a:	cf 91       	pop	r28
    138c:	df 91       	pop	r29
    138e:	08 95       	ret

00001390 <LCD_voidInit>:

void LCD_voidInit(void) {
    1390:	df 93       	push	r29
    1392:	cf 93       	push	r28
    1394:	cd b7       	in	r28, 0x3d	; 61
    1396:	de b7       	in	r29, 0x3e	; 62
    1398:	2d 97       	sbiw	r28, 0x0d	; 13
    139a:	0f b6       	in	r0, 0x3f	; 63
    139c:	f8 94       	cli
    139e:	de bf       	out	0x3e, r29	; 62
    13a0:	0f be       	out	0x3f, r0	; 63
    13a2:	cd bf       	out	0x3d, r28	; 61
	u8 Local_U8Counter = 21;
    13a4:	85 e1       	ldi	r24, 0x15	; 21
    13a6:	8d 87       	std	Y+13, r24	; 0x0d
    13a8:	29 c0       	rjmp	.+82     	; 0x13fc <LCD_voidInit+0x6c>
	while (Local_U8Counter > 0) {
		Delay_ms(1);
    13aa:	80 e0       	ldi	r24, 0x00	; 0
    13ac:	90 e0       	ldi	r25, 0x00	; 0
    13ae:	a0 e4       	ldi	r26, 0x40	; 64
    13b0:	b0 e4       	ldi	r27, 0x40	; 64
    13b2:	89 87       	std	Y+9, r24	; 0x09
    13b4:	9a 87       	std	Y+10, r25	; 0x0a
    13b6:	ab 87       	std	Y+11, r26	; 0x0b
    13b8:	bc 87       	std	Y+12, r27	; 0x0c
    13ba:	11 c0       	rjmp	.+34     	; 0x13de <LCD_voidInit+0x4e>
    13bc:	00 00       	nop
    13be:	69 85       	ldd	r22, Y+9	; 0x09
    13c0:	7a 85       	ldd	r23, Y+10	; 0x0a
    13c2:	8b 85       	ldd	r24, Y+11	; 0x0b
    13c4:	9c 85       	ldd	r25, Y+12	; 0x0c
    13c6:	20 e0       	ldi	r18, 0x00	; 0
    13c8:	30 e0       	ldi	r19, 0x00	; 0
    13ca:	40 e8       	ldi	r20, 0x80	; 128
    13cc:	5f e3       	ldi	r21, 0x3F	; 63
    13ce:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
    13d2:	dc 01       	movw	r26, r24
    13d4:	cb 01       	movw	r24, r22
    13d6:	89 87       	std	Y+9, r24	; 0x09
    13d8:	9a 87       	std	Y+10, r25	; 0x0a
    13da:	ab 87       	std	Y+11, r26	; 0x0b
    13dc:	bc 87       	std	Y+12, r27	; 0x0c
    13de:	69 85       	ldd	r22, Y+9	; 0x09
    13e0:	7a 85       	ldd	r23, Y+10	; 0x0a
    13e2:	8b 85       	ldd	r24, Y+11	; 0x0b
    13e4:	9c 85       	ldd	r25, Y+12	; 0x0c
    13e6:	20 e0       	ldi	r18, 0x00	; 0
    13e8:	30 e0       	ldi	r19, 0x00	; 0
    13ea:	40 e0       	ldi	r20, 0x00	; 0
    13ec:	50 e0       	ldi	r21, 0x00	; 0
    13ee:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    13f2:	18 16       	cp	r1, r24
    13f4:	1c f3       	brlt	.-58     	; 0x13bc <LCD_voidInit+0x2c>
		Local_U8Counter--;
    13f6:	8d 85       	ldd	r24, Y+13	; 0x0d
    13f8:	81 50       	subi	r24, 0x01	; 1
    13fa:	8d 87       	std	Y+13, r24	; 0x0d
	//DIO_U8WritePinVal(LCD_RS, DIO_U8LOW);
}

void LCD_voidInit(void) {
	u8 Local_U8Counter = 21;
	while (Local_U8Counter > 0) {
    13fc:	8d 85       	ldd	r24, Y+13	; 0x0d
    13fe:	88 23       	and	r24, r24
    1400:	a1 f6       	brne	.-88     	; 0x13aa <LCD_voidInit+0x1a>
		Delay_ms(1);
		Local_U8Counter--;
	}

	LCD_voidWrite_Command(0x30);
    1402:	80 e3       	ldi	r24, 0x30	; 48
    1404:	0e 94 34 09 	call	0x1268	; 0x1268 <LCD_voidWrite_Command>
	Delay_ms(5);
    1408:	80 e0       	ldi	r24, 0x00	; 0
    140a:	90 e0       	ldi	r25, 0x00	; 0
    140c:	a0 e8       	ldi	r26, 0x80	; 128
    140e:	b1 e4       	ldi	r27, 0x41	; 65
    1410:	8d 83       	std	Y+5, r24	; 0x05
    1412:	9e 83       	std	Y+6, r25	; 0x06
    1414:	af 83       	std	Y+7, r26	; 0x07
    1416:	b8 87       	std	Y+8, r27	; 0x08
    1418:	11 c0       	rjmp	.+34     	; 0x143c <LCD_voidInit+0xac>
    141a:	00 00       	nop
    141c:	6d 81       	ldd	r22, Y+5	; 0x05
    141e:	7e 81       	ldd	r23, Y+6	; 0x06
    1420:	8f 81       	ldd	r24, Y+7	; 0x07
    1422:	98 85       	ldd	r25, Y+8	; 0x08
    1424:	20 e0       	ldi	r18, 0x00	; 0
    1426:	30 e0       	ldi	r19, 0x00	; 0
    1428:	40 e8       	ldi	r20, 0x80	; 128
    142a:	5f e3       	ldi	r21, 0x3F	; 63
    142c:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
    1430:	dc 01       	movw	r26, r24
    1432:	cb 01       	movw	r24, r22
    1434:	8d 83       	std	Y+5, r24	; 0x05
    1436:	9e 83       	std	Y+6, r25	; 0x06
    1438:	af 83       	std	Y+7, r26	; 0x07
    143a:	b8 87       	std	Y+8, r27	; 0x08
    143c:	6d 81       	ldd	r22, Y+5	; 0x05
    143e:	7e 81       	ldd	r23, Y+6	; 0x06
    1440:	8f 81       	ldd	r24, Y+7	; 0x07
    1442:	98 85       	ldd	r25, Y+8	; 0x08
    1444:	20 e0       	ldi	r18, 0x00	; 0
    1446:	30 e0       	ldi	r19, 0x00	; 0
    1448:	40 e0       	ldi	r20, 0x00	; 0
    144a:	50 e0       	ldi	r21, 0x00	; 0
    144c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1450:	18 16       	cp	r1, r24
    1452:	1c f3       	brlt	.-58     	; 0x141a <LCD_voidInit+0x8a>
	LCD_voidWrite_Command(0x30);
    1454:	80 e3       	ldi	r24, 0x30	; 48
    1456:	0e 94 34 09 	call	0x1268	; 0x1268 <LCD_voidWrite_Command>

	Delay_ms(1);
    145a:	80 e0       	ldi	r24, 0x00	; 0
    145c:	90 e0       	ldi	r25, 0x00	; 0
    145e:	a0 e4       	ldi	r26, 0x40	; 64
    1460:	b0 e4       	ldi	r27, 0x40	; 64
    1462:	89 83       	std	Y+1, r24	; 0x01
    1464:	9a 83       	std	Y+2, r25	; 0x02
    1466:	ab 83       	std	Y+3, r26	; 0x03
    1468:	bc 83       	std	Y+4, r27	; 0x04
    146a:	11 c0       	rjmp	.+34     	; 0x148e <LCD_voidInit+0xfe>
    146c:	00 00       	nop
    146e:	69 81       	ldd	r22, Y+1	; 0x01
    1470:	7a 81       	ldd	r23, Y+2	; 0x02
    1472:	8b 81       	ldd	r24, Y+3	; 0x03
    1474:	9c 81       	ldd	r25, Y+4	; 0x04
    1476:	20 e0       	ldi	r18, 0x00	; 0
    1478:	30 e0       	ldi	r19, 0x00	; 0
    147a:	40 e8       	ldi	r20, 0x80	; 128
    147c:	5f e3       	ldi	r21, 0x3F	; 63
    147e:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
    1482:	dc 01       	movw	r26, r24
    1484:	cb 01       	movw	r24, r22
    1486:	89 83       	std	Y+1, r24	; 0x01
    1488:	9a 83       	std	Y+2, r25	; 0x02
    148a:	ab 83       	std	Y+3, r26	; 0x03
    148c:	bc 83       	std	Y+4, r27	; 0x04
    148e:	69 81       	ldd	r22, Y+1	; 0x01
    1490:	7a 81       	ldd	r23, Y+2	; 0x02
    1492:	8b 81       	ldd	r24, Y+3	; 0x03
    1494:	9c 81       	ldd	r25, Y+4	; 0x04
    1496:	20 e0       	ldi	r18, 0x00	; 0
    1498:	30 e0       	ldi	r19, 0x00	; 0
    149a:	40 e0       	ldi	r20, 0x00	; 0
    149c:	50 e0       	ldi	r21, 0x00	; 0
    149e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    14a2:	18 16       	cp	r1, r24
    14a4:	1c f3       	brlt	.-58     	; 0x146c <LCD_voidInit+0xdc>
	LCD_voidWrite_Command(0x30);
    14a6:	80 e3       	ldi	r24, 0x30	; 48
    14a8:	0e 94 34 09 	call	0x1268	; 0x1268 <LCD_voidWrite_Command>

	LCD_voidWrite_Command(0b00111000);
    14ac:	88 e3       	ldi	r24, 0x38	; 56
    14ae:	0e 94 34 09 	call	0x1268	; 0x1268 <LCD_voidWrite_Command>
	LCD_voidWrite_Command(0b0000110);
    14b2:	86 e0       	ldi	r24, 0x06	; 6
    14b4:	0e 94 34 09 	call	0x1268	; 0x1268 <LCD_voidWrite_Command>
	LCD_voidWrite_Command(0b00001100);
    14b8:	8c e0       	ldi	r24, 0x0C	; 12
    14ba:	0e 94 34 09 	call	0x1268	; 0x1268 <LCD_voidWrite_Command>
}
    14be:	2d 96       	adiw	r28, 0x0d	; 13
    14c0:	0f b6       	in	r0, 0x3f	; 63
    14c2:	f8 94       	cli
    14c4:	de bf       	out	0x3e, r29	; 62
    14c6:	0f be       	out	0x3f, r0	; 63
    14c8:	cd bf       	out	0x3d, r28	; 61
    14ca:	cf 91       	pop	r28
    14cc:	df 91       	pop	r29
    14ce:	08 95       	ret

000014d0 <SetTIM0_OVF_ISR>:


static void (* TIM0_Ptr_ISR)(void);
static void (* TIM1_Ptr_ISR)(void);

void SetTIM0_OVF_ISR(void (*Copy_voidPtrToFun)(void)){
    14d0:	df 93       	push	r29
    14d2:	cf 93       	push	r28
    14d4:	00 d0       	rcall	.+0      	; 0x14d6 <SetTIM0_OVF_ISR+0x6>
    14d6:	cd b7       	in	r28, 0x3d	; 61
    14d8:	de b7       	in	r29, 0x3e	; 62
    14da:	9a 83       	std	Y+2, r25	; 0x02
    14dc:	89 83       	std	Y+1, r24	; 0x01
	TIM0_Ptr_ISR = *Copy_voidPtrToFun;
    14de:	89 81       	ldd	r24, Y+1	; 0x01
    14e0:	9a 81       	ldd	r25, Y+2	; 0x02
    14e2:	90 93 9b 01 	sts	0x019B, r25
    14e6:	80 93 9a 01 	sts	0x019A, r24
}
    14ea:	0f 90       	pop	r0
    14ec:	0f 90       	pop	r0
    14ee:	cf 91       	pop	r28
    14f0:	df 91       	pop	r29
    14f2:	08 95       	ret

000014f4 <__vector_11>:

ISR(__vector_11) {
    14f4:	1f 92       	push	r1
    14f6:	0f 92       	push	r0
    14f8:	0f b6       	in	r0, 0x3f	; 63
    14fa:	0f 92       	push	r0
    14fc:	11 24       	eor	r1, r1
    14fe:	2f 93       	push	r18
    1500:	3f 93       	push	r19
    1502:	4f 93       	push	r20
    1504:	5f 93       	push	r21
    1506:	6f 93       	push	r22
    1508:	7f 93       	push	r23
    150a:	8f 93       	push	r24
    150c:	9f 93       	push	r25
    150e:	af 93       	push	r26
    1510:	bf 93       	push	r27
    1512:	ef 93       	push	r30
    1514:	ff 93       	push	r31
    1516:	df 93       	push	r29
    1518:	cf 93       	push	r28
    151a:	cd b7       	in	r28, 0x3d	; 61
    151c:	de b7       	in	r29, 0x3e	; 62
	TIM0_Ptr_ISR();
    151e:	e0 91 9a 01 	lds	r30, 0x019A
    1522:	f0 91 9b 01 	lds	r31, 0x019B
    1526:	09 95       	icall
	}
    1528:	cf 91       	pop	r28
    152a:	df 91       	pop	r29
    152c:	ff 91       	pop	r31
    152e:	ef 91       	pop	r30
    1530:	bf 91       	pop	r27
    1532:	af 91       	pop	r26
    1534:	9f 91       	pop	r25
    1536:	8f 91       	pop	r24
    1538:	7f 91       	pop	r23
    153a:	6f 91       	pop	r22
    153c:	5f 91       	pop	r21
    153e:	4f 91       	pop	r20
    1540:	3f 91       	pop	r19
    1542:	2f 91       	pop	r18
    1544:	0f 90       	pop	r0
    1546:	0f be       	out	0x3f, r0	; 63
    1548:	0f 90       	pop	r0
    154a:	1f 90       	pop	r1
    154c:	18 95       	reti

0000154e <SetTIM1_OVF_ISR>:

void SetTIM1_OVF_ISR(void (*Copy_voidPtrToFun)(void)){
    154e:	df 93       	push	r29
    1550:	cf 93       	push	r28
    1552:	00 d0       	rcall	.+0      	; 0x1554 <SetTIM1_OVF_ISR+0x6>
    1554:	cd b7       	in	r28, 0x3d	; 61
    1556:	de b7       	in	r29, 0x3e	; 62
    1558:	9a 83       	std	Y+2, r25	; 0x02
    155a:	89 83       	std	Y+1, r24	; 0x01
	TIM1_Ptr_ISR = *Copy_voidPtrToFun;
    155c:	89 81       	ldd	r24, Y+1	; 0x01
    155e:	9a 81       	ldd	r25, Y+2	; 0x02
    1560:	90 93 9d 01 	sts	0x019D, r25
    1564:	80 93 9c 01 	sts	0x019C, r24
}
    1568:	0f 90       	pop	r0
    156a:	0f 90       	pop	r0
    156c:	cf 91       	pop	r28
    156e:	df 91       	pop	r29
    1570:	08 95       	ret

00001572 <__vector_9>:

ISR(__vector_9) {
    1572:	1f 92       	push	r1
    1574:	0f 92       	push	r0
    1576:	0f b6       	in	r0, 0x3f	; 63
    1578:	0f 92       	push	r0
    157a:	11 24       	eor	r1, r1
    157c:	2f 93       	push	r18
    157e:	3f 93       	push	r19
    1580:	4f 93       	push	r20
    1582:	5f 93       	push	r21
    1584:	6f 93       	push	r22
    1586:	7f 93       	push	r23
    1588:	8f 93       	push	r24
    158a:	9f 93       	push	r25
    158c:	af 93       	push	r26
    158e:	bf 93       	push	r27
    1590:	ef 93       	push	r30
    1592:	ff 93       	push	r31
    1594:	df 93       	push	r29
    1596:	cf 93       	push	r28
    1598:	cd b7       	in	r28, 0x3d	; 61
    159a:	de b7       	in	r29, 0x3e	; 62
	TIM1_Ptr_ISR();
    159c:	e0 91 9c 01 	lds	r30, 0x019C
    15a0:	f0 91 9d 01 	lds	r31, 0x019D
    15a4:	09 95       	icall
	}
    15a6:	cf 91       	pop	r28
    15a8:	df 91       	pop	r29
    15aa:	ff 91       	pop	r31
    15ac:	ef 91       	pop	r30
    15ae:	bf 91       	pop	r27
    15b0:	af 91       	pop	r26
    15b2:	9f 91       	pop	r25
    15b4:	8f 91       	pop	r24
    15b6:	7f 91       	pop	r23
    15b8:	6f 91       	pop	r22
    15ba:	5f 91       	pop	r21
    15bc:	4f 91       	pop	r20
    15be:	3f 91       	pop	r19
    15c0:	2f 91       	pop	r18
    15c2:	0f 90       	pop	r0
    15c4:	0f be       	out	0x3f, r0	; 63
    15c6:	0f 90       	pop	r0
    15c8:	1f 90       	pop	r1
    15ca:	18 95       	reti

000015cc <Timer0_voidInit>:



void Timer0_voidInit() {
    15cc:	df 93       	push	r29
    15ce:	cf 93       	push	r28
    15d0:	cd b7       	in	r28, 0x3d	; 61
    15d2:	de b7       	in	r29, 0x3e	; 62
	Assign(*TIM_TCCR0, TIM_TCCR0_INIT);
    15d4:	e3 e5       	ldi	r30, 0x53	; 83
    15d6:	f0 e0       	ldi	r31, 0x00	; 0
    15d8:	10 82       	st	Z, r1
	Assign(*TIM_TIMSK, TIM_TIMSK_INIT);
    15da:	e9 e5       	ldi	r30, 0x59	; 89
    15dc:	f0 e0       	ldi	r31, 0x00	; 0
    15de:	85 e0       	ldi	r24, 0x05	; 5
    15e0:	80 83       	st	Z, r24
	Assign(*TIM_TIFR, TIM_TIFR_INIT);
    15e2:	e8 e5       	ldi	r30, 0x58	; 88
    15e4:	f0 e0       	ldi	r31, 0x00	; 0
    15e6:	10 82       	st	Z, r1
	return;
}
    15e8:	cf 91       	pop	r28
    15ea:	df 91       	pop	r29
    15ec:	08 95       	ret

000015ee <Timer1_voidInit>:

void Timer1_voidInit() {
    15ee:	df 93       	push	r29
    15f0:	cf 93       	push	r28
    15f2:	cd b7       	in	r28, 0x3d	; 61
    15f4:	de b7       	in	r29, 0x3e	; 62
	Assign(*TIM_TCCR1A, TIM_TCCR1A_INIT);
    15f6:	ef e4       	ldi	r30, 0x4F	; 79
    15f8:	f0 e0       	ldi	r31, 0x00	; 0
    15fa:	10 82       	st	Z, r1
	Assign(*TIM_TCCR1B, TIM_TCCR1B_INIT);
    15fc:	ee e4       	ldi	r30, 0x4E	; 78
    15fe:	f0 e0       	ldi	r31, 0x00	; 0
    1600:	82 e0       	ldi	r24, 0x02	; 2
    1602:	80 83       	st	Z, r24
	Assign(*TIM_TIMSK, TIM_TIMSK_INIT);
    1604:	e9 e5       	ldi	r30, 0x59	; 89
    1606:	f0 e0       	ldi	r31, 0x00	; 0
    1608:	85 e0       	ldi	r24, 0x05	; 5
    160a:	80 83       	st	Z, r24
	Assign(*TIM_TIFR, TIM_TIFR_INIT);
    160c:	e8 e5       	ldi	r30, 0x58	; 88
    160e:	f0 e0       	ldi	r31, 0x00	; 0
    1610:	10 82       	st	Z, r1
	return;
}
    1612:	cf 91       	pop	r28
    1614:	df 91       	pop	r29
    1616:	08 95       	ret

00001618 <Timer0_voidWriteReg>:

void Timer0_voidWriteReg(u8 Copy_U8WriteVal){
    1618:	df 93       	push	r29
    161a:	cf 93       	push	r28
    161c:	0f 92       	push	r0
    161e:	cd b7       	in	r28, 0x3d	; 61
    1620:	de b7       	in	r29, 0x3e	; 62
    1622:	89 83       	std	Y+1, r24	; 0x01
	Assign(*TIM_TCNT0, Copy_U8WriteVal);
    1624:	e2 e5       	ldi	r30, 0x52	; 82
    1626:	f0 e0       	ldi	r31, 0x00	; 0
    1628:	89 81       	ldd	r24, Y+1	; 0x01
    162a:	80 83       	st	Z, r24
	return;
}
    162c:	0f 90       	pop	r0
    162e:	cf 91       	pop	r28
    1630:	df 91       	pop	r29
    1632:	08 95       	ret

00001634 <Timer0_voidReadReg>:

void Timer0_voidReadReg(u8 *Copy_U8PtrToVal){
    1634:	df 93       	push	r29
    1636:	cf 93       	push	r28
    1638:	00 d0       	rcall	.+0      	; 0x163a <Timer0_voidReadReg+0x6>
    163a:	cd b7       	in	r28, 0x3d	; 61
    163c:	de b7       	in	r29, 0x3e	; 62
    163e:	9a 83       	std	Y+2, r25	; 0x02
    1640:	89 83       	std	Y+1, r24	; 0x01
	*Copy_U8PtrToVal = ReadReg(*TIM_TCNT0);
    1642:	e2 e5       	ldi	r30, 0x52	; 82
    1644:	f0 e0       	ldi	r31, 0x00	; 0
    1646:	80 81       	ld	r24, Z
    1648:	e9 81       	ldd	r30, Y+1	; 0x01
    164a:	fa 81       	ldd	r31, Y+2	; 0x02
    164c:	80 83       	st	Z, r24
}
    164e:	0f 90       	pop	r0
    1650:	0f 90       	pop	r0
    1652:	cf 91       	pop	r28
    1654:	df 91       	pop	r29
    1656:	08 95       	ret

00001658 <Timer1_voidReadReg>:

void Timer1_voidReadReg(u16 *Copy_U16PtrToVal){
    1658:	df 93       	push	r29
    165a:	cf 93       	push	r28
    165c:	00 d0       	rcall	.+0      	; 0x165e <Timer1_voidReadReg+0x6>
    165e:	cd b7       	in	r28, 0x3d	; 61
    1660:	de b7       	in	r29, 0x3e	; 62
    1662:	9a 83       	std	Y+2, r25	; 0x02
    1664:	89 83       	std	Y+1, r24	; 0x01
	*Copy_U16PtrToVal = ReadReg(*TIM_TCNT1L) | (ReadReg(*TIM_TCNT1H)<<8);
    1666:	ec e4       	ldi	r30, 0x4C	; 76
    1668:	f0 e0       	ldi	r31, 0x00	; 0
    166a:	80 81       	ld	r24, Z
    166c:	28 2f       	mov	r18, r24
    166e:	30 e0       	ldi	r19, 0x00	; 0
    1670:	ed e4       	ldi	r30, 0x4D	; 77
    1672:	f0 e0       	ldi	r31, 0x00	; 0
    1674:	80 81       	ld	r24, Z
    1676:	88 2f       	mov	r24, r24
    1678:	90 e0       	ldi	r25, 0x00	; 0
    167a:	98 2f       	mov	r25, r24
    167c:	88 27       	eor	r24, r24
    167e:	82 2b       	or	r24, r18
    1680:	93 2b       	or	r25, r19
    1682:	e9 81       	ldd	r30, Y+1	; 0x01
    1684:	fa 81       	ldd	r31, Y+2	; 0x02
    1686:	91 83       	std	Z+1, r25	; 0x01
    1688:	80 83       	st	Z, r24
}
    168a:	0f 90       	pop	r0
    168c:	0f 90       	pop	r0
    168e:	cf 91       	pop	r28
    1690:	df 91       	pop	r29
    1692:	08 95       	ret

00001694 <Timer1_voidWriteReg>:



void Timer1_voidWriteReg(u16 Copy_U16WriteVal){
    1694:	df 93       	push	r29
    1696:	cf 93       	push	r28
    1698:	00 d0       	rcall	.+0      	; 0x169a <Timer1_voidWriteReg+0x6>
    169a:	cd b7       	in	r28, 0x3d	; 61
    169c:	de b7       	in	r29, 0x3e	; 62
    169e:	9a 83       	std	Y+2, r25	; 0x02
    16a0:	89 83       	std	Y+1, r24	; 0x01
	Assign(*TIM_TCNT1L, (u8)Copy_U16WriteVal);
    16a2:	ec e4       	ldi	r30, 0x4C	; 76
    16a4:	f0 e0       	ldi	r31, 0x00	; 0
    16a6:	89 81       	ldd	r24, Y+1	; 0x01
    16a8:	80 83       	st	Z, r24
	Assign(*TIM_TCNT1H, (Copy_U16WriteVal>>8));
    16aa:	ed e4       	ldi	r30, 0x4D	; 77
    16ac:	f0 e0       	ldi	r31, 0x00	; 0
    16ae:	89 81       	ldd	r24, Y+1	; 0x01
    16b0:	9a 81       	ldd	r25, Y+2	; 0x02
    16b2:	89 2f       	mov	r24, r25
    16b4:	99 27       	eor	r25, r25
    16b6:	80 83       	st	Z, r24
	return;
}
    16b8:	0f 90       	pop	r0
    16ba:	0f 90       	pop	r0
    16bc:	cf 91       	pop	r28
    16be:	df 91       	pop	r29
    16c0:	08 95       	ret

000016c2 <Timer1_Stop>:

void Timer1_Stop(void){
    16c2:	df 93       	push	r29
    16c4:	cf 93       	push	r28
    16c6:	cd b7       	in	r28, 0x3d	; 61
    16c8:	de b7       	in	r29, 0x3e	; 62
	Assign(*TIM_TCCR1B, LOW);
    16ca:	ee e4       	ldi	r30, 0x4E	; 78
    16cc:	f0 e0       	ldi	r31, 0x00	; 0
    16ce:	10 82       	st	Z, r1
}
    16d0:	cf 91       	pop	r28
    16d2:	df 91       	pop	r29
    16d4:	08 95       	ret

000016d6 <UltraSonic_voidInit>:
#include "UltraSonic_interface.h"
#include "LCD_interface.h"

u8 static OV_Flag = 0;  // Flag to check if unexpected timer 1 overflow happened

void UltraSonic_voidInit(void) {		// call back function for timer 1
    16d6:	df 93       	push	r29
    16d8:	cf 93       	push	r28
    16da:	cd b7       	in	r28, 0x3d	; 61
    16dc:	de b7       	in	r29, 0x3e	; 62
	SetTIM1_OVF_ISR(ULT_TIM1_ISR_Main); // setting the pointer to fun to be equal my ISR function
    16de:	86 e7       	ldi	r24, 0x76	; 118
    16e0:	9b e0       	ldi	r25, 0x0B	; 11
    16e2:	0e 94 a7 0a 	call	0x154e	; 0x154e <SetTIM1_OVF_ISR>
}
    16e6:	cf 91       	pop	r28
    16e8:	df 91       	pop	r29
    16ea:	08 95       	ret

000016ec <ULT_TIM1_ISR_Main>:

void ULT_TIM1_ISR_Main(void) { // My ISR function that i want to be executed when overflow happen
    16ec:	df 93       	push	r29
    16ee:	cf 93       	push	r28
    16f0:	cd b7       	in	r28, 0x3d	; 61
    16f2:	de b7       	in	r29, 0x3e	; 62
	OV_Flag = 1; // Set the flag to indicate overflow occured (error shouldn't happen)
    16f4:	81 e0       	ldi	r24, 0x01	; 1
    16f6:	80 93 9e 01 	sts	0x019E, r24
	Timer1_Stop();
    16fa:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <Timer1_Stop>
	Timer1_voidWriteReg(LOW);	// clear timer 1 register
    16fe:	80 e0       	ldi	r24, 0x00	; 0
    1700:	90 e0       	ldi	r25, 0x00	; 0
    1702:	0e 94 4a 0b 	call	0x1694	; 0x1694 <Timer1_voidWriteReg>
	Timer1_Stop();
    1706:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <Timer1_Stop>
	LCD_voidWrite_Command(0x01);
    170a:	81 e0       	ldi	r24, 0x01	; 1
    170c:	0e 94 34 09 	call	0x1268	; 0x1268 <LCD_voidWrite_Command>
	LCD_voidWriteString("Out of range");
    1710:	80 e6       	ldi	r24, 0x60	; 96
    1712:	90 e0       	ldi	r25, 0x00	; 0
    1714:	0e 94 9a 08 	call	0x1134	; 0x1134 <LCD_voidWriteString>
}
    1718:	cf 91       	pop	r28
    171a:	df 91       	pop	r29
    171c:	08 95       	ret

0000171e <UltraSoinc_U8ReadDistance>:

u8 UltraSoinc_U8ReadDistance(u16* Copy_U16DisanceVal) {	// the main function that return distance
    171e:	df 93       	push	r29
    1720:	cf 93       	push	r28
    1722:	cd b7       	in	r28, 0x3d	; 61
    1724:	de b7       	in	r29, 0x3e	; 62
    1726:	a2 97       	sbiw	r28, 0x22	; 34
    1728:	0f b6       	in	r0, 0x3f	; 63
    172a:	f8 94       	cli
    172c:	de bf       	out	0x3e, r29	; 62
    172e:	0f be       	out	0x3f, r0	; 63
    1730:	cd bf       	out	0x3d, r28	; 61
    1732:	9a a3       	std	Y+34, r25	; 0x22
    1734:	89 a3       	std	Y+33, r24	; 0x21
	u8 Local_U8ErrorFlag = U8_NOERROR;
    1736:	81 e0       	ldi	r24, 0x01	; 1
    1738:	89 87       	std	Y+9, r24	; 0x09
	u8 Local_EchoVal = 0;
    173a:	1a 86       	std	Y+10, r1	; 0x0a
	u16 Local_TimerRead = 0;
    173c:	1c 86       	std	Y+12, r1	; 0x0c
    173e:	1b 86       	std	Y+11, r1	; 0x0b
	f64 Local_TempVal = 0;
    1740:	80 e0       	ldi	r24, 0x00	; 0
    1742:	90 e0       	ldi	r25, 0x00	; 0
    1744:	a0 e0       	ldi	r26, 0x00	; 0
    1746:	b0 e0       	ldi	r27, 0x00	; 0
    1748:	8d 83       	std	Y+5, r24	; 0x05
    174a:	9e 83       	std	Y+6, r25	; 0x06
    174c:	af 83       	std	Y+7, r26	; 0x07
    174e:	b8 87       	std	Y+8, r27	; 0x08

	u8 Local_arr1[20] = { 0 };
    1750:	84 e1       	ldi	r24, 0x14	; 20
    1752:	fe 01       	movw	r30, r28
    1754:	3d 96       	adiw	r30, 0x0d	; 13
    1756:	df 01       	movw	r26, r30
    1758:	98 2f       	mov	r25, r24
    175a:	1d 92       	st	X+, r1
    175c:	9a 95       	dec	r25
    175e:	e9 f7       	brne	.-6      	; 0x175a <UltraSoinc_U8ReadDistance+0x3c>

	DIO_U8WritePinVal(TRIG, LOW);		// to initiate the ultrasonic
    1760:	83 e1       	ldi	r24, 0x13	; 19
    1762:	60 e0       	ldi	r22, 0x00	; 0
    1764:	0e 94 c7 06 	call	0xd8e	; 0xd8e <DIO_U8WritePinVal>
	Delay_us(5);
    1768:	1c 82       	std	Y+4, r1	; 0x04
    176a:	1b 82       	std	Y+3, r1	; 0x03
    176c:	09 c0       	rjmp	.+18     	; 0x1780 <UltraSoinc_U8ReadDistance+0x62>
	...
    1776:	8b 81       	ldd	r24, Y+3	; 0x03
    1778:	9c 81       	ldd	r25, Y+4	; 0x04
    177a:	01 96       	adiw	r24, 0x01	; 1
    177c:	9c 83       	std	Y+4, r25	; 0x04
    177e:	8b 83       	std	Y+3, r24	; 0x03
    1780:	8b 81       	ldd	r24, Y+3	; 0x03
    1782:	9c 81       	ldd	r25, Y+4	; 0x04
    1784:	85 30       	cpi	r24, 0x05	; 5
    1786:	91 05       	cpc	r25, r1
    1788:	90 f3       	brcs	.-28     	; 0x176e <UltraSoinc_U8ReadDistance+0x50>
	DIO_U8WritePinVal(TRIG, HIGH);		// start ultrasonic
    178a:	83 e1       	ldi	r24, 0x13	; 19
    178c:	61 e0       	ldi	r22, 0x01	; 1
    178e:	0e 94 c7 06 	call	0xd8e	; 0xd8e <DIO_U8WritePinVal>
	Delay_us(15);
    1792:	1a 82       	std	Y+2, r1	; 0x02
    1794:	19 82       	std	Y+1, r1	; 0x01
    1796:	09 c0       	rjmp	.+18     	; 0x17aa <UltraSoinc_U8ReadDistance+0x8c>
	...
    17a0:	89 81       	ldd	r24, Y+1	; 0x01
    17a2:	9a 81       	ldd	r25, Y+2	; 0x02
    17a4:	01 96       	adiw	r24, 0x01	; 1
    17a6:	9a 83       	std	Y+2, r25	; 0x02
    17a8:	89 83       	std	Y+1, r24	; 0x01
    17aa:	89 81       	ldd	r24, Y+1	; 0x01
    17ac:	9a 81       	ldd	r25, Y+2	; 0x02
    17ae:	8f 30       	cpi	r24, 0x0F	; 15
    17b0:	91 05       	cpc	r25, r1
    17b2:	90 f3       	brcs	.-28     	; 0x1798 <UltraSoinc_U8ReadDistance+0x7a>
	DIO_U8WritePinVal(TRIG, LOW);
    17b4:	83 e1       	ldi	r24, 0x13	; 19
    17b6:	60 e0       	ldi	r22, 0x00	; 0
    17b8:	0e 94 c7 06 	call	0xd8e	; 0xd8e <DIO_U8WritePinVal>
    17bc:	07 c0       	rjmp	.+14     	; 0x17cc <UltraSoinc_U8ReadDistance+0xae>
	//LCD_voidWriteString("lol1");
	while (!Local_EchoVal) {			// w8 for echo to be high
		DIO_U8ReadPinVal(ECHO, &Local_EchoVal);
    17be:	9e 01       	movw	r18, r28
    17c0:	26 5f       	subi	r18, 0xF6	; 246
    17c2:	3f 4f       	sbci	r19, 0xFF	; 255
    17c4:	84 e1       	ldi	r24, 0x14	; 20
    17c6:	b9 01       	movw	r22, r18
    17c8:	0e 94 88 06 	call	0xd10	; 0xd10 <DIO_U8ReadPinVal>
	Delay_us(5);
	DIO_U8WritePinVal(TRIG, HIGH);		// start ultrasonic
	Delay_us(15);
	DIO_U8WritePinVal(TRIG, LOW);
	//LCD_voidWriteString("lol1");
	while (!Local_EchoVal) {			// w8 for echo to be high
    17cc:	8a 85       	ldd	r24, Y+10	; 0x0a
    17ce:	88 23       	and	r24, r24
    17d0:	b1 f3       	breq	.-20     	; 0x17be <UltraSoinc_U8ReadDistance+0xa0>
		DIO_U8ReadPinVal(ECHO, &Local_EchoVal);
	}
	//LCD_voidWriteString("lol2");
	Timer1_voidInit();			// start timer 1
    17d2:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <Timer1_voidInit>
    17d6:	0f c0       	rjmp	.+30     	; 0x17f6 <UltraSoinc_U8ReadDistance+0xd8>
	while (Local_EchoVal) {		//w8 for echo to be low
		DIO_U8ReadPinVal(ECHO, &Local_EchoVal);
    17d8:	9e 01       	movw	r18, r28
    17da:	26 5f       	subi	r18, 0xF6	; 246
    17dc:	3f 4f       	sbci	r19, 0xFF	; 255
    17de:	84 e1       	ldi	r24, 0x14	; 20
    17e0:	b9 01       	movw	r22, r18
    17e2:	0e 94 88 06 	call	0xd10	; 0xd10 <DIO_U8ReadPinVal>
		if (OV_Flag == 1) {		// if unexpected overflow occur
    17e6:	80 91 9e 01 	lds	r24, 0x019E
    17ea:	81 30       	cpi	r24, 0x01	; 1
    17ec:	21 f4       	brne	.+8      	; 0x17f6 <UltraSoinc_U8ReadDistance+0xd8>
			OV_Flag = 0;
    17ee:	10 92 9e 01 	sts	0x019E, r1
			Local_U8ErrorFlag = U8_ERROR;
    17f2:	19 86       	std	Y+9, r1	; 0x09
    17f4:	03 c0       	rjmp	.+6      	; 0x17fc <UltraSoinc_U8ReadDistance+0xde>
	while (!Local_EchoVal) {			// w8 for echo to be high
		DIO_U8ReadPinVal(ECHO, &Local_EchoVal);
	}
	//LCD_voidWriteString("lol2");
	Timer1_voidInit();			// start timer 1
	while (Local_EchoVal) {		//w8 for echo to be low
    17f6:	8a 85       	ldd	r24, Y+10	; 0x0a
    17f8:	88 23       	and	r24, r24
    17fa:	71 f7       	brne	.-36     	; 0x17d8 <UltraSoinc_U8ReadDistance+0xba>
			Local_U8ErrorFlag = U8_ERROR;
			break;
		}
	}

	Timer1_Stop();			// stop timer 1
    17fc:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <Timer1_Stop>
	Timer1_voidReadReg(&Local_TimerRead);	// read time
    1800:	ce 01       	movw	r24, r28
    1802:	0b 96       	adiw	r24, 0x0b	; 11
    1804:	0e 94 2c 0b 	call	0x1658	; 0x1658 <Timer1_voidReadReg>
//	LCD_voidWrite_Command(0x01);
//	itoa(Local_TimerRead, Local_arr1, 10);
//	LCD_voidWrite_Command(0x80);
//	LCD_voidWriteString(Local_arr1);

	Timer1_voidWriteReg(LOW);	//clear timer 1 register
    1808:	80 e0       	ldi	r24, 0x00	; 0
    180a:	90 e0       	ldi	r25, 0x00	; 0
    180c:	0e 94 4a 0b 	call	0x1694	; 0x1694 <Timer1_voidWriteReg>
	Timer1_Stop();
    1810:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <Timer1_Stop>


	Local_TempVal = (((f64) (Local_TimerRead) *0.02941) + 1.284); // convert time to distance
    1814:	8b 85       	ldd	r24, Y+11	; 0x0b
    1816:	9c 85       	ldd	r25, Y+12	; 0x0c
    1818:	cc 01       	movw	r24, r24
    181a:	a0 e0       	ldi	r26, 0x00	; 0
    181c:	b0 e0       	ldi	r27, 0x00	; 0
    181e:	bc 01       	movw	r22, r24
    1820:	cd 01       	movw	r24, r26
    1822:	0e 94 cd 03 	call	0x79a	; 0x79a <__floatunsisf>
    1826:	dc 01       	movw	r26, r24
    1828:	cb 01       	movw	r24, r22
    182a:	bc 01       	movw	r22, r24
    182c:	cd 01       	movw	r24, r26
    182e:	2e e3       	ldi	r18, 0x3E	; 62
    1830:	3d ee       	ldi	r19, 0xED	; 237
    1832:	40 ef       	ldi	r20, 0xF0	; 240
    1834:	5c e3       	ldi	r21, 0x3C	; 60
    1836:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    183a:	dc 01       	movw	r26, r24
    183c:	cb 01       	movw	r24, r22
    183e:	bc 01       	movw	r22, r24
    1840:	cd 01       	movw	r24, r26
    1842:	2d e1       	ldi	r18, 0x1D	; 29
    1844:	3a e5       	ldi	r19, 0x5A	; 90
    1846:	44 ea       	ldi	r20, 0xA4	; 164
    1848:	5f e3       	ldi	r21, 0x3F	; 63
    184a:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <__addsf3>
    184e:	dc 01       	movw	r26, r24
    1850:	cb 01       	movw	r24, r22
    1852:	8d 83       	std	Y+5, r24	; 0x05
    1854:	9e 83       	std	Y+6, r25	; 0x06
    1856:	af 83       	std	Y+7, r26	; 0x07
    1858:	b8 87       	std	Y+8, r27	; 0x08
	*Copy_U16DisanceVal = (u16) Local_TempVal;
    185a:	6d 81       	ldd	r22, Y+5	; 0x05
    185c:	7e 81       	ldd	r23, Y+6	; 0x06
    185e:	8f 81       	ldd	r24, Y+7	; 0x07
    1860:	98 85       	ldd	r25, Y+8	; 0x08
    1862:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1866:	dc 01       	movw	r26, r24
    1868:	cb 01       	movw	r24, r22
    186a:	e9 a1       	ldd	r30, Y+33	; 0x21
    186c:	fa a1       	ldd	r31, Y+34	; 0x22
    186e:	91 83       	std	Z+1, r25	; 0x01
    1870:	80 83       	st	Z, r24

	Timer1_voidWriteReg(LOW);	//clear timer 1 register
    1872:	80 e0       	ldi	r24, 0x00	; 0
    1874:	90 e0       	ldi	r25, 0x00	; 0
    1876:	0e 94 4a 0b 	call	0x1694	; 0x1694 <Timer1_voidWriteReg>
	Timer1_Stop();
    187a:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <Timer1_Stop>

//	itoa(*Copy_U16DisanceVal, Local_arr1, 10);
//	LCD_voidWrite_Command((0x80 | 0xC0));
//	LCD_voidWriteString(Local_arr1);

	return Local_U8ErrorFlag;
    187e:	89 85       	ldd	r24, Y+9	; 0x09
}
    1880:	a2 96       	adiw	r28, 0x22	; 34
    1882:	0f b6       	in	r0, 0x3f	; 63
    1884:	f8 94       	cli
    1886:	de bf       	out	0x3e, r29	; 62
    1888:	0f be       	out	0x3f, r0	; 63
    188a:	cd bf       	out	0x3d, r28	; 61
    188c:	cf 91       	pop	r28
    188e:	df 91       	pop	r29
    1890:	08 95       	ret

00001892 <main>:
#include "S4MDelay.h"
#include "LCD_interface.h"
#include "stdlib.h"
#include "Delay.h"

void main(void) {
    1892:	df 93       	push	r29
    1894:	cf 93       	push	r28
    1896:	cd b7       	in	r28, 0x3d	; 61
    1898:	de b7       	in	r29, 0x3e	; 62
    189a:	a3 97       	sbiw	r28, 0x23	; 35
    189c:	0f b6       	in	r0, 0x3f	; 63
    189e:	f8 94       	cli
    18a0:	de bf       	out	0x3e, r29	; 62
    18a2:	0f be       	out	0x3f, r0	; 63
    18a4:	cd bf       	out	0x3d, r28	; 61
	u16 Read = 0;
    18a6:	1f 86       	std	Y+15, r1	; 0x0f
    18a8:	1e 86       	std	Y+14, r1	; 0x0e
	u8 Local_arr1[20];
	DIO_voidInit();
    18aa:	0e 94 3b 06 	call	0xc76	; 0xc76 <DIO_voidInit>
	UltraSonic_voidInit();
    18ae:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <UltraSonic_voidInit>

	u64 counter = 0;
    18b2:	1e 82       	std	Y+6, r1	; 0x06
    18b4:	1f 82       	std	Y+7, r1	; 0x07
    18b6:	18 86       	std	Y+8, r1	; 0x08
    18b8:	19 86       	std	Y+9, r1	; 0x09
    18ba:	1a 86       	std	Y+10, r1	; 0x0a
    18bc:	1b 86       	std	Y+11, r1	; 0x0b
    18be:	1c 86       	std	Y+12, r1	; 0x0c
    18c0:	1d 86       	std	Y+13, r1	; 0x0d
	u8 i = 0;
    18c2:	1d 82       	std	Y+5, r1	; 0x05
	//Timer1_voidInit();
	LCD_voidInit();
    18c4:	0e 94 c8 09 	call	0x1390	; 0x1390 <LCD_voidInit>
	__asm__("SEI");
    18c8:	78 94       	sei
//	LCD_voidWriteString("lol");

	while (1) {
			LCD_voidWrite_Command(0x80);
    18ca:	80 e8       	ldi	r24, 0x80	; 128
    18cc:	0e 94 34 09 	call	0x1268	; 0x1268 <LCD_voidWrite_Command>
			LCD_voidWriteString("Distance = ");
    18d0:	8d e6       	ldi	r24, 0x6D	; 109
    18d2:	90 e0       	ldi	r25, 0x00	; 0
    18d4:	0e 94 9a 08 	call	0x1134	; 0x1134 <LCD_voidWriteString>
			itoa(Read, Local_arr1, 10);
    18d8:	8e 85       	ldd	r24, Y+14	; 0x0e
    18da:	9f 85       	ldd	r25, Y+15	; 0x0f
    18dc:	9e 01       	movw	r18, r28
    18de:	20 5f       	subi	r18, 0xF0	; 240
    18e0:	3f 4f       	sbci	r19, 0xFF	; 255
    18e2:	b9 01       	movw	r22, r18
    18e4:	4a e0       	ldi	r20, 0x0A	; 10
    18e6:	50 e0       	ldi	r21, 0x00	; 0
    18e8:	0e 94 ee 0c 	call	0x19dc	; 0x19dc <itoa>
			DIO_U8WritePortVal(1, Read);
    18ec:	8e 85       	ldd	r24, Y+14	; 0x0e
    18ee:	9f 85       	ldd	r25, Y+15	; 0x0f
    18f0:	98 2f       	mov	r25, r24
    18f2:	81 e0       	ldi	r24, 0x01	; 1
    18f4:	69 2f       	mov	r22, r25
    18f6:	0e 94 6c 07 	call	0xed8	; 0xed8 <DIO_U8WritePortVal>
			LCD_voidWriteString(Local_arr1);
    18fa:	ce 01       	movw	r24, r28
    18fc:	40 96       	adiw	r24, 0x10	; 16
    18fe:	0e 94 9a 08 	call	0x1134	; 0x1134 <LCD_voidWriteString>

		UltraSoinc_U8ReadDistance(&Read);
    1902:	ce 01       	movw	r24, r28
    1904:	0e 96       	adiw	r24, 0x0e	; 14
    1906:	0e 94 8f 0b 	call	0x171e	; 0x171e <UltraSoinc_U8ReadDistance>
	//	Timer1_Stop();
	//	LCD_voidWrite_Command((0x80 | 0xC0));
//		itoa(counter, Local_arr1, 10);
//		LCD_voidWriteString(Local_arr1);
	//	counter++;
		for (i = 0; i <= 30; i++) {
    190a:	1d 82       	std	Y+5, r1	; 0x05
    190c:	29 c0       	rjmp	.+82     	; 0x1960 <main+0xce>
			Delay_ms(5);
    190e:	80 e0       	ldi	r24, 0x00	; 0
    1910:	90 e0       	ldi	r25, 0x00	; 0
    1912:	a0 e8       	ldi	r26, 0x80	; 128
    1914:	b1 e4       	ldi	r27, 0x41	; 65
    1916:	89 83       	std	Y+1, r24	; 0x01
    1918:	9a 83       	std	Y+2, r25	; 0x02
    191a:	ab 83       	std	Y+3, r26	; 0x03
    191c:	bc 83       	std	Y+4, r27	; 0x04
    191e:	11 c0       	rjmp	.+34     	; 0x1942 <main+0xb0>
    1920:	00 00       	nop
    1922:	69 81       	ldd	r22, Y+1	; 0x01
    1924:	7a 81       	ldd	r23, Y+2	; 0x02
    1926:	8b 81       	ldd	r24, Y+3	; 0x03
    1928:	9c 81       	ldd	r25, Y+4	; 0x04
    192a:	20 e0       	ldi	r18, 0x00	; 0
    192c:	30 e0       	ldi	r19, 0x00	; 0
    192e:	40 e8       	ldi	r20, 0x80	; 128
    1930:	5f e3       	ldi	r21, 0x3F	; 63
    1932:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
    1936:	dc 01       	movw	r26, r24
    1938:	cb 01       	movw	r24, r22
    193a:	89 83       	std	Y+1, r24	; 0x01
    193c:	9a 83       	std	Y+2, r25	; 0x02
    193e:	ab 83       	std	Y+3, r26	; 0x03
    1940:	bc 83       	std	Y+4, r27	; 0x04
    1942:	69 81       	ldd	r22, Y+1	; 0x01
    1944:	7a 81       	ldd	r23, Y+2	; 0x02
    1946:	8b 81       	ldd	r24, Y+3	; 0x03
    1948:	9c 81       	ldd	r25, Y+4	; 0x04
    194a:	20 e0       	ldi	r18, 0x00	; 0
    194c:	30 e0       	ldi	r19, 0x00	; 0
    194e:	40 e0       	ldi	r20, 0x00	; 0
    1950:	50 e0       	ldi	r21, 0x00	; 0
    1952:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1956:	18 16       	cp	r1, r24
    1958:	1c f3       	brlt	.-58     	; 0x1920 <main+0x8e>
	//	Timer1_Stop();
	//	LCD_voidWrite_Command((0x80 | 0xC0));
//		itoa(counter, Local_arr1, 10);
//		LCD_voidWriteString(Local_arr1);
	//	counter++;
		for (i = 0; i <= 30; i++) {
    195a:	8d 81       	ldd	r24, Y+5	; 0x05
    195c:	8f 5f       	subi	r24, 0xFF	; 255
    195e:	8d 83       	std	Y+5, r24	; 0x05
    1960:	8d 81       	ldd	r24, Y+5	; 0x05
    1962:	8f 31       	cpi	r24, 0x1F	; 31
    1964:	a0 f2       	brcs	.-88     	; 0x190e <main+0x7c>
			Delay_ms(5);
		}
		LCD_voidWrite_Command(0x01);
    1966:	81 e0       	ldi	r24, 0x01	; 1
    1968:	0e 94 34 09 	call	0x1268	; 0x1268 <LCD_voidWrite_Command>
    196c:	ae cf       	rjmp	.-164    	; 0x18ca <main+0x38>

0000196e <__prologue_saves__>:
    196e:	2f 92       	push	r2
    1970:	3f 92       	push	r3
    1972:	4f 92       	push	r4
    1974:	5f 92       	push	r5
    1976:	6f 92       	push	r6
    1978:	7f 92       	push	r7
    197a:	8f 92       	push	r8
    197c:	9f 92       	push	r9
    197e:	af 92       	push	r10
    1980:	bf 92       	push	r11
    1982:	cf 92       	push	r12
    1984:	df 92       	push	r13
    1986:	ef 92       	push	r14
    1988:	ff 92       	push	r15
    198a:	0f 93       	push	r16
    198c:	1f 93       	push	r17
    198e:	cf 93       	push	r28
    1990:	df 93       	push	r29
    1992:	cd b7       	in	r28, 0x3d	; 61
    1994:	de b7       	in	r29, 0x3e	; 62
    1996:	ca 1b       	sub	r28, r26
    1998:	db 0b       	sbc	r29, r27
    199a:	0f b6       	in	r0, 0x3f	; 63
    199c:	f8 94       	cli
    199e:	de bf       	out	0x3e, r29	; 62
    19a0:	0f be       	out	0x3f, r0	; 63
    19a2:	cd bf       	out	0x3d, r28	; 61
    19a4:	09 94       	ijmp

000019a6 <__epilogue_restores__>:
    19a6:	2a 88       	ldd	r2, Y+18	; 0x12
    19a8:	39 88       	ldd	r3, Y+17	; 0x11
    19aa:	48 88       	ldd	r4, Y+16	; 0x10
    19ac:	5f 84       	ldd	r5, Y+15	; 0x0f
    19ae:	6e 84       	ldd	r6, Y+14	; 0x0e
    19b0:	7d 84       	ldd	r7, Y+13	; 0x0d
    19b2:	8c 84       	ldd	r8, Y+12	; 0x0c
    19b4:	9b 84       	ldd	r9, Y+11	; 0x0b
    19b6:	aa 84       	ldd	r10, Y+10	; 0x0a
    19b8:	b9 84       	ldd	r11, Y+9	; 0x09
    19ba:	c8 84       	ldd	r12, Y+8	; 0x08
    19bc:	df 80       	ldd	r13, Y+7	; 0x07
    19be:	ee 80       	ldd	r14, Y+6	; 0x06
    19c0:	fd 80       	ldd	r15, Y+5	; 0x05
    19c2:	0c 81       	ldd	r16, Y+4	; 0x04
    19c4:	1b 81       	ldd	r17, Y+3	; 0x03
    19c6:	aa 81       	ldd	r26, Y+2	; 0x02
    19c8:	b9 81       	ldd	r27, Y+1	; 0x01
    19ca:	ce 0f       	add	r28, r30
    19cc:	d1 1d       	adc	r29, r1
    19ce:	0f b6       	in	r0, 0x3f	; 63
    19d0:	f8 94       	cli
    19d2:	de bf       	out	0x3e, r29	; 62
    19d4:	0f be       	out	0x3f, r0	; 63
    19d6:	cd bf       	out	0x3d, r28	; 61
    19d8:	ed 01       	movw	r28, r26
    19da:	08 95       	ret

000019dc <itoa>:
    19dc:	fb 01       	movw	r30, r22
    19de:	9f 01       	movw	r18, r30
    19e0:	e8 94       	clt
    19e2:	42 30       	cpi	r20, 0x02	; 2
    19e4:	c4 f0       	brlt	.+48     	; 0x1a16 <itoa+0x3a>
    19e6:	45 32       	cpi	r20, 0x25	; 37
    19e8:	b4 f4       	brge	.+44     	; 0x1a16 <itoa+0x3a>
    19ea:	4a 30       	cpi	r20, 0x0A	; 10
    19ec:	29 f4       	brne	.+10     	; 0x19f8 <itoa+0x1c>
    19ee:	97 fb       	bst	r25, 7
    19f0:	1e f4       	brtc	.+6      	; 0x19f8 <itoa+0x1c>
    19f2:	90 95       	com	r25
    19f4:	81 95       	neg	r24
    19f6:	9f 4f       	sbci	r25, 0xFF	; 255
    19f8:	64 2f       	mov	r22, r20
    19fa:	77 27       	eor	r23, r23
    19fc:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <__udivmodhi4>
    1a00:	80 5d       	subi	r24, 0xD0	; 208
    1a02:	8a 33       	cpi	r24, 0x3A	; 58
    1a04:	0c f0       	brlt	.+2      	; 0x1a08 <itoa+0x2c>
    1a06:	89 5d       	subi	r24, 0xD9	; 217
    1a08:	81 93       	st	Z+, r24
    1a0a:	cb 01       	movw	r24, r22
    1a0c:	00 97       	sbiw	r24, 0x00	; 0
    1a0e:	a1 f7       	brne	.-24     	; 0x19f8 <itoa+0x1c>
    1a10:	16 f4       	brtc	.+4      	; 0x1a16 <itoa+0x3a>
    1a12:	5d e2       	ldi	r21, 0x2D	; 45
    1a14:	51 93       	st	Z+, r21
    1a16:	10 82       	st	Z, r1
    1a18:	c9 01       	movw	r24, r18
    1a1a:	0c 94 0f 0d 	jmp	0x1a1e	; 0x1a1e <strrev>

00001a1e <strrev>:
    1a1e:	dc 01       	movw	r26, r24
    1a20:	fc 01       	movw	r30, r24
    1a22:	67 2f       	mov	r22, r23
    1a24:	71 91       	ld	r23, Z+
    1a26:	77 23       	and	r23, r23
    1a28:	e1 f7       	brne	.-8      	; 0x1a22 <strrev+0x4>
    1a2a:	32 97       	sbiw	r30, 0x02	; 2
    1a2c:	04 c0       	rjmp	.+8      	; 0x1a36 <strrev+0x18>
    1a2e:	7c 91       	ld	r23, X
    1a30:	6d 93       	st	X+, r22
    1a32:	70 83       	st	Z, r23
    1a34:	62 91       	ld	r22, -Z
    1a36:	ae 17       	cp	r26, r30
    1a38:	bf 07       	cpc	r27, r31
    1a3a:	c8 f3       	brcs	.-14     	; 0x1a2e <strrev+0x10>
    1a3c:	08 95       	ret

00001a3e <__udivmodhi4>:
    1a3e:	aa 1b       	sub	r26, r26
    1a40:	bb 1b       	sub	r27, r27
    1a42:	51 e1       	ldi	r21, 0x11	; 17
    1a44:	07 c0       	rjmp	.+14     	; 0x1a54 <__udivmodhi4_ep>

00001a46 <__udivmodhi4_loop>:
    1a46:	aa 1f       	adc	r26, r26
    1a48:	bb 1f       	adc	r27, r27
    1a4a:	a6 17       	cp	r26, r22
    1a4c:	b7 07       	cpc	r27, r23
    1a4e:	10 f0       	brcs	.+4      	; 0x1a54 <__udivmodhi4_ep>
    1a50:	a6 1b       	sub	r26, r22
    1a52:	b7 0b       	sbc	r27, r23

00001a54 <__udivmodhi4_ep>:
    1a54:	88 1f       	adc	r24, r24
    1a56:	99 1f       	adc	r25, r25
    1a58:	5a 95       	dec	r21
    1a5a:	a9 f7       	brne	.-22     	; 0x1a46 <__udivmodhi4_loop>
    1a5c:	80 95       	com	r24
    1a5e:	90 95       	com	r25
    1a60:	bc 01       	movw	r22, r24
    1a62:	cd 01       	movw	r24, r26
    1a64:	08 95       	ret

00001a66 <_exit>:
    1a66:	f8 94       	cli

00001a68 <__stop_program>:
    1a68:	ff cf       	rjmp	.-2      	; 0x1a68 <__stop_program>
